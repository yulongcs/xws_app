%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (marina) ()%%Title: (11-36.eps)%%CreationDate: 2/6/11 3:58 PM%%BoundingBox: 19 93 522 694%%HiResBoundingBox: 19.8906 93.7822 521.8818 693.9404%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 283.5 424.8936 283.5 424.8936%AI3_TileBox: -22.5356 29.1963 589.4648 821.1968%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 566.9291 850.3937%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1023.3442 1113.7681 0.6667 1829 1029 18 0 0 50 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 108 128 8%%BeginData: 18774 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4527F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F821F827F8F8%F827FD12F8A8FD05F800F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827%F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8%F827F8F8F827F8F8F827F8F8F805FD25F8A800F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F800F827F8F8F827F8F8F827FD14F8A8FD0FF805F8F8F827F8F8F8%27F8F8F827F8F8F827F800F827F800F827F800F827F8F8F827F8F8F827F8%F8F827F8F8F827F8F8F800FD2BF8A827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F8F8F827FD0FF827A8F8F8F827F8F8F827F8%F8F827F8F8F827F8F8F827F800F827F800F827F827F827F827F827F827F8%27F827F827F827F827F827F827F800F827F8F8F827F8F8F827F8F8F827F8%F8F827F8F8F800FD1FF8A827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F805%F827F8F8F827F8F8F827FD12F8A8FD09F805F8F8F827F8F8F827F8F8F827%F800F827F805F827F827F827F827F827F827F827F827F827F805F827F800%F827F800F827F8F8F827F8F8F827FD29F8A827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F8F8F827FD0EF8A8F827F8F8F8%27F8F8F827F8F8F827F800F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F800F827F8F8F8%27F8F8F827F8F8F827F8F8F800FD1DF8A827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F8F8F827F8F8F827FD10F8A8FD07F827F8F8F827%F8F8F827F800F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F805F827F8F8F805F8F8F827F8F8F800%FD23F8A827F827F827F827F827F827F827F827F827F827F827F827F827F8%270027F8270527F8270527F8270527F8270527F8270027F8270027F827F8%27F827F827F84B2027F827F827F827F827F827F827F827F827F827F827F8%27F827F827F8F8F827FD0BF827A8F8F8F827F8F8F827F8F8F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F805F827204520272021F827F8F8F827F8F8F827%F8F8F805FD1BF8A827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F8270027F8270027F8270027F8270027F8270027F8270027F8%27F827F827204B444BF805F84B45272027F827F827F827F827F827F827F8%27F827F8F8F827F8F8F827FD0EF8A8F800F8F8F827F8F8F827F800F827F8%05F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F82720452021204544696845F8F8F827F8F8F805FD%21F8A827F827F827F827F827F827F827F827F827F827F8270027F8272727%F8272727F8272727F827272700272727F8272727F8272727F8270527204B%044569704B4B2727F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F8F8F827FD0AF8A8F827F8F8F827F800F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827204B69270527F805F827F800F827F8F8F827F8F8%F827F8F8F827FD19F8A827F827F827F827F827F827F827F827F827F827F8%27F8270027F8270527F8272727F8272727F8272727F8272727F8272727F8%270027F827214B45522727F827F827F827F827F827F827F827F827F827F8%27F827F827F827F8F8F827F8F8F827FD0CF8A8F8F8F827F8F8F827F800F8%0520686827F805F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F845204B2727F827F827F805F827F8F8F8%27F8F8F827FD1FF8A827F827F827F827F827F84B444B204B684B20270527%F8272727F827272700272727052727270527272705272727002727270027%2727F827452745520027F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F8F8F827FD07F827A8F8F8F827F800F8%27F8202027F805F8274469444BF827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F805444BF84B2727F827F827F827F8%27F800F827F8F8F827F8F8F827F8F8F805FD17F8A827F827F827F827F827%F827F8272027F827214B686F2127F8272727F8272727F827272700272727%00272727F8272727F8272727F8272169F8274B27F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F8F8F827F8F8F827FD0A%F8A8F827F8F8F827F800F827F805F8272027204B26054445F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F8694505206F%0527F827F827F827F805F827F8F8F827F8F8F805FD1DF8A827F827F827F8%27F827F827F82700272027056F4A05454B0427272705FD1727054B8D2704%4B4B27F8270027F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F8F8F827FD06F8A8F827F800F827F827F827F8%27F827F827F827F86FF8274505F827F827F827F827F8270027F8270027F8%270027F827F827F827F8056969F827454CF827F827F827F827F827F827F8%00265126F8F827F8F8F827F8F8F800FD15F8A827F827F827F827F827F827%F827F8270027F8274A4BF84B2727F8272727002727270527272705272727%05272727002727270027218D2127216A27270027F827F827F827F827F827%26752627F827F827F827F827F827F827F805F827F8F8F827FD0CF8A8F8F8%F827F800F827F827F827F827F827F827F8274A054527F827F827F827F827%F827F827F827F827F827F827F827F827F827F88D4505F8456927F827F827%F827F800F827F800F851F8F8F826F8F8F805FD1BF8A827F827F827F827F8%27F8270027F8272727F827276F044C45FD1927056F8D2705276970052727%27F82700274AC7C17526757505F8270527F827F827F827F827F827F827F8%27F827F827F800F827FD07F827A8F8F8F827F827F827F827F827F827F827%F827F8276E272170F827F8270027F8270027F8270527F8270527F8270027%F82704276927F827208E2727F827F827F827F89F9E4B2675752F06060628%F8F8F827F8F8F827FD17F8A827F827F827F827F827F827F8270027F82727%27F89927276A27272705FD13270527694B0427056F692E0527F8270027F8%279F27F827000600270027F827F827F827F827F827F827F827F8F8F827F8%F8F827FD0AF8A8F827F800F827F827F827F827F827F827F827F8276E6FF8%8E2127F827F827F827F8270027F8270027F8270027F827F827454BF827F8%27694C0527F800F827F800269FF805F8270505F827F8F8F827FD1DF8A827%F827F827F827F8270027F8272727F8272727009992276A7005FD0A274B27%4B272705FD0527457005272727456A279FC1C774270005F8C17505F82705%300627F827F827F827F827F827F827F827F827F827F827F827F827F8F8F8%27FD06F8A8F827F827F827F827F827F827F827F827F827F8054ABB04468E%27F827F827052700274A754A756E9974752727F8274569F8270027206A27%9FC075749F7475509FC04BF8060E360D06F827F8F8F827F827F827F8F8F8%27FD0BF8214621FD07F8A827F827F827F827F827F827F827F8270527F827%0527B44B278F21FD07274A7527270027279F9E754B272170FD05276A217B%C14BF82700274A7B505120270D370527F827214BF8FD0527F827F827F827%F827F827F800F804218F8FB321FD07F8A8F8F8F827F805F827F827F827F8%27F827F827F827F8932005466AF827F827F8272699F828062E052726C126%754B45F827F827F84B45279E75F827F8514A26F827F827F80E0D20F827F8%214527F827F827FD0EF86A8F216A45FD08F8A827F827F827F827F827F827%0527F8272727002727276E75054C46FD05274B994B27272E0C3514279E27%9999212727270527452751C74B2700754A27052E0527F8270E30F827F827%F86AFD0427F827F8272627F827F827F827F8276A6BF8466A04F8F8F800F8%F8F827A8F800F827F827F827F827F827F827F827F827F827F84B6E272146%F82705272699272705272720061A51514AC14A27F8270027214B059F9E27%F8274A060D28052F062700360E27F82746218E4B2727F82726262027F8F8%F805FD04F86A46F8466AFD0AF8A827F827F827F827F827F827F8270027F8%272727F827276F2127464C04272799FD06272E14527575C1742705274B9F%99992752C19F002727510D272027F82F0D3614360004468F698E2727264B%2627F800F827F827F827F8216A46F8464627FD0AF8A8F827F800F827F827%F827F827F827F827F827F827F8274A4BF8274627F84B9827F82727270D13%27756EC14A05F85198C1C0C7C05174C75105F827510CF820F820F827060C%0004216B45B145272627F8F8F800FD07F8214521F84645FD0CF8A827F827%F827F827F8270027F8272727F8272727052727274A27274C462727759875%27270C3C2775279FC17575C1C19F519FC1C79FC7C17500272775052F0C2F%0527F827F827216B6AB26A512727F827F827F827F827F827204B45272170%2104F827F8F8F827FD06F8A8F827F827F827F827F827F827F827F827F827%F827F827004B2627042746270427747500130C27752726C1C0C198510005%F89FC0C1C0C77505F87526200536150DF827F827458F8E8E45512705F805%F821F82120452045202120452121FD0FF8A827F827F827F827F827F82700%27F8272727F82727270027277527270527464C2727982D1A2EF8769A4C27%754B27004B272774C7C1C7C19A27994B2720270C3D0C26F8706A6A6A9427%512727204B204B214520272027F84B45452005F8F8F827F8F8F827FD08F8%A8F8F8F827F805F827F827F827F827F827F827F827F827F8274A6FF827F8%2721282775F81A1327F84BBC94F805F8704B764B7599C1BC4B6FBC52130D%350D140D27456A4527698EF8514A212021F821F804F8F8F84545452021FD%13F8A827F827F827F827F827F8270527F827272700272727052727276E75%05272727057527272E3C14351335779A4B764B27274B4B9A704CF8272E1B%143D141A0D4C694C2105218F27274A702027F805F827204B456F4527F827%F827F827F827F827F827F827FD07F827A8F800F827F827F827F827F827F8%27F827F827F827F827F8270027984B0027F8274A270027054B452705132E%4B2727F827F805F827F827001A0D27052821452127F827F86A6905F85145%45F827204544692021F804F8F8F800FD13F8A827F827F827F827F827F827%F8270027F8272727F827272700270527985105272751FD0427694B052727%35F8272727212E2727F827202F1327F84B454BFD06276A70F8054A758E8E%686F2127F805F827F827F827F827F800F827F8F8F827FD0AF8A8F827F800%F827F827F827F827F827F827F827F827F827F827F827F8279875F8272627%00272069052720271327F827F82E1A1A0C27F8271305F8454527F8272727%F82704466A2144686E6F4546F804F8F8F800FD19F8A827F827F827F827F8%27F827F8270527F827272700FD0727002799994B51272705704527274B21%350C272727134313351335132E2070452705272727F8270027F8958E6920%2750514B462127F827F827F827F827F827F827F827F827F827F8F8F827FD%06F8A8F827F800F827F827F827F827F827F827F827F827F827F827F827F8%27F8274AC126270027454B054B20270C13F827051A1327F8270527208E45%05F8272727F827F827F804F88F6A27042726504A4521F8F827F8F8F827FD%15F8A827F827F827F827F827F827F827F8270027F8272727F8272727F827%272700519F270027056F4527452705271335F83C1A2EF827272745B14527%002727270027F827F827F827F88F8E272727F851504C2104F827F827F827%F805F827F8F8F827F8F8F800FD08F8A8F8F8F827F800F827F827F827F827%F827F827F827F827F827F827F827F827C075F827F8274569F84BF827F827%0C1A142EF827F82745B045270527F827F827F827F827F827F804F88F6A27%F805F84A4A45FD1BF8A827F827F827F827F827F8270027F8270527F82727%27002727270527004BC1C7FD05274B212745FD052705272127052769B169%FD05270027F8270027F827F827F82721B26A27F827F8754545F827F827F8%27F827F827F827F827F8F8F827FD07F827A8F8F8F827F800F827F827F827%F827F827F827F827F827F827F827F8279EC12027F827F827F827204B0027%F827F827F827F82769B0452705272727F827F827F827F804F827F804F827%8F8FF805F826504C6AF8F827FD17F8A827F827F827F827F827F827F827F8%27F8270027F8272727F827272726C751050027272700272727204B052705%270527204B8DB045FD0727F827F82720272127212721468EB28F27F85150%4B8F70F827F827F827F827F8F8F827F8F8F827FD0AF8A8F827F8F8F827F8%00F827F827F827F827F827F827F827F827F827F8279E9FF800F827F827F8%27F827204544454469688D8C8D2005F8272727F827F827F8276A8F8E8F8F%8F8EFD048F9450754A468F6AFD1BF8A827F827F827F827F827F827F827F8%27F8270527F8272727F8272727214B9FC175510527002727270527274B44%6F696F454B272700FD0727F8276AB28FB28F8F6A8F8F9594704B706B8F6B%4CF827F827F827F827F827F827F827F821F827FD0AF8A8F827F8F8F827F8%00F827F827F827F827F827F827F827F827F827F82721212675749F7427F8%05F827F827F805F8270505F827F827F8FD0527F827F8FD048F46F804F827%20752D288F6AF804F8F8F827FD19F8A827F827F827F827F827F827F827F8%27F827F8270027F8270027F8270527214B214B267B9F9F50270027F82727%27F8272727F8270527F8272727F827F827218F8FB28F702104F827277B2E%4C4527F827F827F827F827F827F8F8F827F8F8F827FD0CF8A8F8F8F827F8%F8F827F800F827F827F827F827F827F827F827F827F827F805F827454521%274A7574752000F827F827F8270527F827F827F827F827F827F804F82745%6A8E8F6A21F827267C07272727FD1DF8A827F827F827F827F827F827F827%F827F827F8270027F8272727F8272727F8270527214B214B214B759F4B27%0527F8FD09270027F827F827F827F805F827218FB270F827515A06272727%F827F827F827F827F827F827F827F827F8F8F827FD07F827A8F8F8F827F8%F8F827F800F827F827F827F827F827F827F827F827F827F827F827F827F8%27F8272146279F7527F827F827F8FD0527F827F827F827F804F804F804F8%0446B36A27F84B2F0E26272727FD1BF8A827F827F827F827F827F827F827%F827F827F827F827F827F8270027F8270027F8270527F82705272146459F%99270027F8FD0727F827F827204B454646706A8F8FB36A27F80050590EFD%0527F827F827F8F8F827F8F8F827FD0EF8A8F800F8F8F827F8F8F827F8F8%F827F805F827F827F827F827F827F827F827F827F827F827F827F805F846%45C24B05F827F827F827F827F804F8466AFD058F6A6B4646FD04F8207C0E%0EF8272727FD1BF8A827F827F827F827F827F827F827F827F827F827F827%F827F8270027F8270527F8270527F8272727F8272170BB76F827F8270027%F827F8272095B26B214C4B6F4A754A26264A264B507C301506FD0527F827%F827F827F827F827F827F8F8F827FD0AF8A8F827F8F8F827F8F8F827F800%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F846%6FBC2027F827F827F827F827F86B8F45F87598A058595859587D58593436%0E0F06F8F8FD0527FD19F8A827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827044B6AC27505F827F8%27F827F827F84CB26AF899992F141B140E0D0E0D0E0D0E0D2F0026F8FD05%27F827F8F8F827F8F8F827FD10F8A8FD07F827F8F8F827F8F8F827F800F8%27F805F827F827F827F827F827F827F827F827F827459A9A27F827F827F8%27F827F80421B36A279920061B0D27FD0DF827F8272727FD19F8A827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F8270027%F8270027F8272176BC4BF827F827F827F827F827F8276AB3469F9905142E%F827F827F827F827F827F827F8FD0527F827F827F827F827F827F8F8F827%FD0BF827A8F8F8F827F8F8F827F8F8F827F8F8F827F800F827F827F827F8%27F827F827F827F827F827F8212170BC4BF827F827F827F827F827F827F8%046A8F4AC774050D27F8F8F827F8F8F827F8F8F8FD0627FD1AF8A827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F8272176BC4BF827F827F827F827F805F805F805F871B32150C87406%142EF827F827F827F827F8FD0727F8F8F827F8F8F827FD12F8A8FD09F800%F8F8F827F8F8F827F8F8F827F800F827F800F827F805F827F82121709427%F827F805F827F804F827216A466A466B8F8FF8F874C1260D0E272627F827%F827F8272727F8272727FD1BF8A827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F84B219A7027F827F827F827F8%27F8718F8F6B8F6B8F8F712127F84BC175063D2EFD0D27F827F827F827F8%21F827F8F8F827FD0EF8A8FD05F827F8F8F827F8F8F827F8F8F827F8F8F8%27F800F827F800F827F804F845219A6F05F827F827F827F827F86A8F46F8%27204B20FD05F84AC74A06142F2627F827F8FD0527F827FD1DF8A805F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F8272145%45BD7005F827F827F827F827F84CB246F8769AC2BBC299754A7599C79827%0E370D27F8F8F827F827F827F800F827F8F8F827F8F8F827FD14F8A8FD0F%F800F8F8F827F8F8F827F8F8F827F8F8F845709A21FD04F827F8F8F827F8%F86A6BF876BCC2BCC2BBC2FD04C1982606360E2EFD29F8A827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F82745949A762005F8%27F827F827F827F827F88F2175BCC399756F9A759975754B280D37143027%27F827F827F827F827F827F827F827F827F8F8F827F8F8F800FD0FF827A8%FD07F800F8F8F827F8F8F827F8F8F827F8F8F827F821F845454B4B27F8F8%F827F8F8F827F8F8F827F82146059ABC4B0C0D140D0D0C0D060E14140E2F%05F8F827FD27F8A827F8F8F827F827F827F827F827F827F827F827F827F8%27F82721702127F805F827F827F827F827F827F827F827452120C36F0C14%3D0D280527052805280527F827F827F827F827F827F8F8F827F8F8F827F8%F8F827FD16F8A8FD15F800F805F8F821956A27F8F8F827F8F8F804F8F8F8%27F8F8F821F84B9427141400FD36F8A827F827F827F827F827F827F827F8%27F827F827F827F82705350D130D777004F827F8277071F827F827F827F8%27F8054B9A053D0620F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F8F8F827FD16F8A8FD0DF805F8F8F827F8F8F827F8F800%2F0D150D4CF8F8F827454CB770F8F8F827F8F8F827F8706F0D0DF8F827F8%F8F827F8F8F827FD2DF8A8F8F827F8F8F827F800F827F827F827F827F827%F827F827F820F8260D144C4BF82745270C284C27F827F827F827F8279A4B%0D28F827F827F827F827F827F827F827F827F8F8F827F8F8F827F8F8F827%FD1CF8A8FD1BF805142F6A7045210D3D0D4C21FD07F8706F050DFD39F8A8%04F827F827F827F827F827F827F827F827F827F827F827F827F827F83614%5227280D370D1506704C27F827217094700530F827F827F827F827F827F8%27F827F827F827F827F827F827F827F8F8F827F8F8F827FD17F827A8FD17%F805F8F8F820051514140E5926F82735064C6A7070706F27051405F8F827%F8F8F800FD33F8A827F8F8F827F8F8F827F8F8F827F8F8F827F827F827F8%27F827F827F827062F065274F8F899C7350D2F0628060D0E370520F827F8%27F827F827F805F827F8F8F827F8F8F827F8F8F827F8F8F827FD1EF8A8FD%20F84A27F826C0C1F80D14150E150E1400FD3CF8A827F8F8F827F821F827%F827F827F827F827F827F827F827F827F827F827F8002651F8004AC74AF8%F8280D300D2EF820F827F827F827F827F827F827F827F827F827F827F827%F800F827F8F8F827FD1EF8A8FD1FF84BF8F8F89F9E26FD45F8A8FD06F827%F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F800F8274AF8F827C175%F827F805F827F805F827F800F827F8F8F827F8F8F827F8F8F827F8F8F827%F8F8F827FD24F8A8FD1EF82627F8F8F8C120FD46F8A8FD06F827F8F8F827%F8F8F827F827F827F827F827F827F827F805F875F827F84B9F05F827F827%F827F827F827F827F827F827F827F827F827F827F827F8F8F827F8F8F827%FD23F827A8FD1DF84B20F8F8F84A75FD47F8A8FD0CF827F8F8F827F8F8F8%27F8F8F827F8F8F8274B26F827F8752000F8F8F827F8F8F827F8F8F827F8%F8F827F8F8F827F8F8F827F8F8F800FD2AF8A8FD1CF8204BF8F8F84B4AFD%48F8A8FD0CF827F8F8F827F8F8F827F8F8F827F800F875F8F8F84B7527F8%27F827F827F827F827F827F827F827F827F8F8F827F8F8F827F8F8F827FD%2AF8A8FD1BF84B20F8F8756E26FD49F8A8FD1AF8274BF820754AF8F827F8%F8F827F8F8F827F8F8F827F8F8F827FD38F8A8FD1AF84A202075FD4DF8A8%FD16F827F8F8274BF875F800F8F8F827F8F8F827F8F8F827F8F8F827F8F8%F827F8F8F827FD33F827A8FD19F84BF84B20FD4EF8A8FD18F86FF8F826FD%4FF8A8FD17F84B20F8F827FD4FF8A8FD16F8274BF8F8F84A27FD4EF8A8FD%16F86F21F8F8F82620FD4EF8A8FD15F82176FD05F84BFD4EF8A8FD15F870%21FD04F84B20FD4EF8A8FD14F8279527F84B4B7520FD4EF827A8FD14F821%70F8704B20FD51F8A8FD14F870704B6FFD53F8A8FD14F845706F21FD53F8%A8FD14F871709AFD54F8A8FD14F895BD4BFD54F8A8FD13F84BBF95FD55F8%A8FD13F8214521FD55F8A8FD16F820FD53F827A8FD6BF8A8FD6BF8A8FD6B%F8A8FD6BF8A8FD6BF8A8FD6BF8A8FD6BF8A8FD6AF827A8FD6BF8A8FD6BF8%A8FD6BF8A8%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--7 Bn%AI5_BeginGradient: (Unnamed gradient 47)(Unnamed gradient 47) 0 2 Bd[0<C4C3C2C1C0BEBDBCBBBAB9B7B6B5B3B2B1B0AEAEADACABAAA9A8A6A5A4A2A2A19F9E9D9B9998989695939290908F8E8C8B8A8A8887868684838180807E7D7B7B7A797977767575737272706F6F6D6C6C6B6A6A6867676565646262616160605E5D5D5C5C5A5A5959575756565555535353525251514F4F4F4E4E4E4D4D4D4B4B4B4A4A4A4A48484848484747474747>101<606162636465666768696A6B6C6D6E6F70717272737475767778797A7B7C7C7D7E7F8081828383848586878888898A8B8C8D8D8E8F90909192939494959697979899999A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A7A8A9A9AAAAABABACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBCBCBDBDBDBDBD>04 %_Br[0 0.278431 1 0 1 0.741176 0 2 50.0844 100 %_BS%_0 0.278431 1 0 1 0.741176 0 2 50.0844 100 Bs0 0.768627 1 0 1 0.376471 0 2 36.2637 0 %_BS%_0 0.768627 1 0 1 0.376471 0 2 36.2637 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 63)(Unnamed gradient 63) 0 2 Bd[<A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A8A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A7A5A5A5A5A5A5A5A5A5A5A5A5A5A5A4A4A4A4A4A3A3A3A3A4A3A3A3A3A2A2A2A2A2A2A2A2A1A1A1A2A1A1A1A0A0A09F9FA09F9F9F9E9E9D9D9E9D9D9C9C9B9B9C9B9B9A9A99999899979897979696959595949493939291929190908F8F8E8E8C8D8C8B8B8A8988888787868685848382818281807F7E7D7C7B7A79797877767574737271706E6D6C6B6A696867656462615F5E5C5A5857><9292929292929292929292929292929292929292929292929292929292929292929292929293919191919191919191919191919191919191919191919191919190909090909090908F8F8F8F8F8F8E8F8F8F8F8F8E8E8E8E8F8E8E8E8E8D8D8D8D8C8C8C8D8B8B8B8A8B8B898A8A8889898888888787888787858686858584848384828383828381828181807F7F7E7F7D7E7D7B7C7A7C7A797A79777877767775747574727172716F6F706F6E6C6C6D6C6B6A69686766666564636261605F5F5E5D5C5B5A595958575454535251504F4D4C4B4948464544><8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B898A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8A8989898989898989888888888888888787878787878787878586868686868686868585858384848484848483838383828282828281817F818180807E7F7F7F7F7E7E7D7D7B7C7A7C7A7B797A797979777876777777767475757374737172727071706E6E6F6E6C6B6D6C6A69696A6967666665666564636161605F5E5E5D5C5B5A5A595857565554535352504F4E4D4C4C49484645454241><5252525252525252525252525252525252525252525252525252525252525252525252525251515151515151515151515151515151514F4F4F4F4F4F4F4F4F4F4D4D4D4D4D4D4D4D4B4B4B4B4B4B4A4A4A4A4A4A48484848474646464644444444434343424141414040403E3E3E3C3C3C3B3B3B393938383836363534343333323230302F2F2E2D2D2C2B2B292928272726252424232221201F1F1E1D1D1C1B1A19191817161614141313121110100F0E0D0C0C0B0A0A090808070606050505040403030202020202020101010101010000000000000000><515151515151515151515151515151515151515151515151515151515151515151515151515152525252525252525252525252525252535353535353535353535354545454545454555555555555555656565656575757575758585858595959595A5A5A5A5B5B5B5B5C5C5C5D5D5D5E5E5E5F5F5F606061616162626363646464656566666767686869696A6A6B6B6C6C6D6E6E6F6F7071717273737474757677777879797A7B7C7C7D7E7F7F80818283848485868788898A8B8C8D8D8E8F9091929394959698999A9B9C9D9E9FA0A1A3A4A5A6A7A9AAAB><5252525252525252525252525252525252525252525252525252525252525252525252525252535353535353535353535353535353535454545454545454545455555555555555555656565656565757575757575858585858595959595A5A5A5A5B5B5B5B5C5C5C5D5D5D5E5E5E5F5F5F6060606161616262636363646465656666676767686869696A6A6B6C6C6D6D6E6E6F707071717273737475757677777879797A7B7C7C7D7E7F7F80818283838485868788898A8A8B8C8D8E8F909192939495969798999A9B9D9E9FA0A1A2A3A5A6A7A8A9ABACAD><5454545454545454545454545454545454545454545454545454545454545454545454545455555555555555555555555555555555555656565656565656565657575757575757575858585858585959595959595A5A5A5A5B5B5B5B5B5C5C5C5C5D5D5D5E5E5E5E5F5F5F606060616161626262636364646465656666666767686869696A6A6B6B6C6C6D6D6E6E6F707071717272737474757676777878797A7A7B7C7D7D7E7F808081828384848586878889898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A2A3A4A5A6A7A9AAABACADAFB0>4 %_Br[0.62 0 50 100 %_BS%_0.62 0 50 100 Bs0.17 0 79.1209 0 %_BS%_0.17 0 79.1209 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 66)(Unnamed gradient 66) 0 2 Bd[<1B1A191817161514131211100F0E0D0D0B0B0A090807060504030202010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><B4B5B4B4B4B4B4B4B5B4B5B4B5B4B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B6B5B6B6B6B6B6B6B5B6B6B5B5B4B4B4B2B2B1B1B1B0B0AFAFAFAEAEADACACABABABA9A9A8A8A8A6A6A5A5A5A4A4A4A3A3A2A2A2A0A0A09F9F9D9D9D9C9C9C9A9A9A989897979695959593939392929290908F8F8F8E8E8E8C8C8C8B8B8B8989898888888686868585858383838282828180807F7F7F7F7D7D7D7B7B7B7A7A7A78787878777777757575747474747272727170706F6F6F6F6D6D6D6D6C6C6C6A6A6A6A6969696968686866666666656565656363636362626262616160605F5F5F5F5E5D5D5D5C5C5C5C5C5B5B5B5B5959595959585858585856565656565555555555545454545452525252525151515151515050505050504E4E4E4E4E4E4D4D4D4D4D4D4D4C4C4C4C4C4C4B4B4A4A4A4A4A4A4A4A4A4848484848484848484848474747474747474747474747><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101030507090A0C0E11131417191A1C1E212325282A2D2D2F313336383A3C3E3E414346484A4D4D4F515356585A5B5C5E61626465676A6C6E7070727476787B7B7D7F8183838487898B8C8E8F929494969799999B9D9FA0A0A2A4A5A6A7A9ABABACAFB0B0B2B4B4B5B7B8B8B9BABBBBBCBEBEBFC1C2C3C4C6C6C7C8C8C9CBCBCCCDCDCED0D0D1D2D2D4D5D5D6D7D7D8D9D9DADBDBDCDCDEDFE0E1E2E3E4E4E5E6E6E7E7E8E9E9EAEAEBEBECEDEDEEEEEFEFF0F0F0F1F1F2F2F3F3F4F4F4F4F5F5F6F6F6F6F7F7F8F8F9F9F9F9FAFAFBFBFBFBFCFCFCFCFCFDFDFDFDFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>01<60606161626263636364646565666666676768686969696A6A6B6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757576767677777878787979797A7A7B7B7B7C7C7D7D7D7E7E7E7F7F808080818181828283838384848485858586868787878888888989898A8A8A8B8B8C8C8C8D8D8D8E8E8E8F8F8F909090919191929292939393949494959595969696979797979898989999999A9A9A9B9B9B9B9C9C9C9D9D9D9E9E9E9E9F9F9FA0A0A0A1A1A1A1A2A2A2A2A3A3A3A4A4A4A4A5A5A5A5A6A6A6A7A7A7A7A8A8A8A8A9A9A9A9AAAAAAAAABABABABACACACACADADADADAEAEAEAEAEAFAFAFAFB0B0B0B0B0B1B1B1B1B1B2B2B2B2B2B3B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B6B7B7B7B7B7B7B8B8B8B8B8B8B9B9B9B9B9B9B9BABABABABABABABABBBBBBBBBBBBBBBBBBBCBCBCBCBCBCBCBCBCBCBCBDBDBDBDBDBDBDBDBDBDBDBD><D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A9999989796959493929191908F8E8D8C8B8B8A8988878685858483828180807F7E7D7C7B7B7A7978777676757473727271706F6E6E6D6C6B6A6A696867676665646363626160605F5E5D5D5C5B5A5A59585857565555545352525150504F4E4D4D4C4B4B4A4949484747464545444343424141403F3F3E3D3D3C3B3B3A39393838373636353434333332313130302F2E2E2D2D2C2C2B2A2A292928282727262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161615151414131312121211111010100F0F0E0E0E0D0D0D0C0C0B0B0B0A0A0A0909090808080707070706060605050505040404040303030302020202020101010101010100000000000000>4 %_Br[0 0.278431 1 0 1 0.741176 0 2 50.0844 100 %_BS%_0 0.278431 1 0 1 0.741176 0 2 50.0844 100 Bs0.105882 0.705882 0 0 1 0.376471 0.843137 2 36.2637 0 %_BS%_0.105882 0.705882 0 0 1 0.376471 0.843137 2 36.2637 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 70)(Unnamed gradient 70) 0 2 Bd[<2626262625252525252525252424242424242423232323232323232222222222222221212121212121212020202020202020202020202020201F1F1F202020201F1F1F1F202020201F1F1F1F1F20201F1F1F1F202020201F1F20202020201F1F2020202020201F1F1F1F2020201F1F1F1F1F1F1F1F1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1A1A1919191A1A18181919191A1B1B1B1B1C1D1E1F202021222324252526262728292A2B2C2C2D2E2E2F3031323232333435353636363738393A3B3C3B3C3C3D3E3F3F3F4040414242434444444546><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFDFDFCFBFAF9F8F7F6F6F5F4F4F3F2F2F1F1F0EFEFEEEEEDECECEBEBEAEAE9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0E0DFDFDFDEDEDEDEDDDDDDDD><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFBF8F6F3F1EEECE9E7E5E2E0DEDBD8D6D3D0CECCCAC8C6C4C1BFBDBAB8B6B3B1AFACAAA8A6A3A19E9C99979592908D8A8784827F7D7A787673716F6C6A676562605E5B595654514F4C494744423F3D3A383533302D2B282522201D1B181614110F0C0A080705030200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909080808080808080807070707070707060606060606060605050505050505040404040403030303030202020202020202020101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><C7C7C7C7C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9CACACACACACACACACBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCECECECECECECECECFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D5D5D5D5D5D5D5D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D9D9D9D9D9D9D9DADADADADADADADADBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFE0E0E0E0E0E0E0E0E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E3E3E3E3>0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2>4 %_Br[0.27451 0.866667 0 0 0.890196 0 0.823529 2 50 100 %_BS%_0.27451 0.866667 0 0 0.890196 0 0.823529 2 50 100 Bs0.14902 1 1 0.058824 0.780392 0 0 2 50 0 %_BS%_0.14902 1 1 0.058824 0.780392 0 0 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 74)(Unnamed gradient 74) 1 2 Bd[<9D9D9D9D9D9D9D9D9D9D9D9D9D9E9E9E9E9E9E9E9E9E9E9F9F9F9F9F9F9FA0A0A0A0A0A0A1A1A1A2A2A2A2A2A3A3A3A3A3A4A4A4A5A5A5A5A6A6A6A7A7A8A8A8A8A9A9AAAAABABABABACACACACADADADAEAEAFAFAFAFB0B1B1B1B1B2B2B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9BABABABABABBBBBBBCBCBDBDBDBEBEBEBEBFBFBFBFC0C0C0C1C1C1C2C2C2C2C2C3C3C3C3C3C4C4C5C6C6C6C7C7C7C8C8C8C8C9C9C9C9CACACBCBCCCCCDCDCDCDCECECECFD0D0D0D0D1D1D1D2D2D3D3D4D4D4D5D5D5D5D6D6D7D7D7D8D8D9D9D9DADADADADBDBDB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020203040405070709090B0C0C0E1010121313151717191B1B1D1E1E20222224262828292B2B2D2F313133353737383A3C3C3D3F4143434547494B4B4D4F51545456585A5C5E5E6062646668686A6C6E707274767677797B7C7E808183838586888A8B8D8E90919394969898999B9C9D9E9FA1A2A3A4A6A7A8A9AAABACAD><3C3C3C3C3C3C3C3C3C3C3C3C3C3B3B3B3B3B3B3B3B3B3B3A3A3A3939393939393938383837373736363635353434343333333333323231313030302F2F2F2F2E2E2D2D2C2C2B2B2A2A292928282727262525232322222120201F1F1F1F1E1D1D1C1C1C1B1B1A19191817171514141312121110100F0E0E0D0B0B0A09080806050505040303020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>00<DFDFDFDFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDCDCDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BFBFBEBEBDBDBCBBBBBAB9B9B8B8B7B6B6B5B4B4B3B2B2B1B0B0AFAEAEADACACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A999898979695949493929190908F8E8D8C8B8B8A89888786868584838281807F7F7E7D7C7B7A79787777767574737271706F6E6D6C6B6A6A696867666564636261605F5E5D5C5B5A5958><DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADADAD9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9>4 %_Br[0.615686 0 0.235294 0 0 0.87451 0.858824 2 64.8352 0 %_BS%_0.615686 0 0.235294 0 0 0.87451 0.858824 2 64.8352 0 Bs0.858823 0.678431 0 0 0 0.345098 0.85098 2 50 100 %_BS%_0.858823 0.678431 0 0 0 0.345098 0.85098 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 75)(Unnamed gradient 75) 0 2 Bd[<1B1B1B1B1A1A1A1A1A1919191818181717171616161515151414131313121211111110100F0F0E0E0D0D0D0C0B0B0B0B0A0A09090808070706060505040403020201010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><B4B4B4B4B5B5B5B4B4B4B4B4B4B4B4B4B4B4B4B4B4B5B4B4B4B4B5B5B4B4B4B5B5B4B4B4B5B5B4B4B5B5B5B4B5B5B5B5B5B5B5B5B6B5B5B5B5B5B5B5B5B5B5B5B5B5B5B6B6B5B6B6B6B6B6B6B6B6B6B6B6B5B6B6B6B5B5B5B4B4B4B4B2B2B2B2B1B1B1B0B0B0B0AFAFAFAEAEAEADACACACABABABA9A9A9A8A8A8A8A6A6A7A5A5A5A4A4A4A3A3A3A2A2A2A0A0A09F9F9F9F9D9D9D9C9C9C9A9A9A98989797969595959393939292929090908F8F8F8E8E8E8C8C8B8B8B898989888888868685858583838382828281807F7F7F7D7D7D7B7B7A7A7A7878777777757575747472727271706F6F6F6D6D6C6C6C6A6A6A69696868686666656565636362626161605F5F5E5D5D5C5C5B5B5B595958585656565555545454525251515050504E4E4D4D4C4C4B4A4A48484747><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010305050609090A0C0C0E101113141517191A1C1E1E21232526282A2B2D2F2F31333536383A3C3C3E4141434648484B4D4F4F51535558585A5C5E5E61626465676A6C6E6E7072747676797B7D7F7F8183848687898B8E8F9292949697999B9B9D9FA0A2A4A4A6A7A9ABACAEAFB0B2B4B5B7B8B9B9BABBBCBEBFC1C3C3C4C6C7C8C9CBCCCDCDCED0D1D2D4D5D6D7D8D9D9DADBDCDEE0E1E2E4E5E6E7E8E9E9EAEBECEDEEEFF0F0F1F2F3F4F4F5F6F6F7F8F9F9F9FAFBFBFCFCFDFDFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>01<6060606060606061616161616161616262626262626263636363636364646464646565656565666666666667676767676868686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F6F6F6F70707070717171727272727373737374747475757575767676777777787878787979797A7A7A7B7B7B7B7C7C7C7D7D7D7E7E7E7F7F7F8080808181818282828283838384848485858586868787878888888989898A8A8A8B8B8B8C8C8C8D8D8D8E8E8F8F8F9090909191919292939393949494959595969697979798989899999A9A9A9B9B9C9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A8A8A8A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B2B2B2B3B3B4B4B4B5B5B6B6B7B7B7B8B8B9B9BABABABBBBBCBCBDBD><D7D7D7D7D6D6D6D6D6D5D5D5D4D4D4D3D3D3D2D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBDBDBCBCBBBBBAB9B9B8B8B7B7B6B5B5B4B3B3B2B2B1B0B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9C9C9B9A9A99989897969595949392929190908F8E8D8D8C8B8A8A898887868685848383828180807F7E7D7C7C7B7A797878777675747473727170706F6E6D6C6B6B6A6968676666656463626161605F5E5D5C5B5B5A59585756555454535251504F4E4D4D4C4B4A49484746454544434241403F3E3D3C3B3B3A393837363534333231302F2E2E2D2C2B2A292827262524232221201F1E1D1C1B1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0 0.278431 1 0 1 0.741176 0 2 50.0844 100 %_BS%_0 0.278431 1 0 1 0.741176 0 2 50.0844 100 Bs0.105882 0.705882 0 0 1 0.376471 0.843137 2 60.4396 0 %_BS%_0.105882 0.705882 0 0 1 0.376471 0.843137 2 60.4396 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 90)(Unnamed gradient 90) 1 2 Bd[<B5B5B6B6B7B7B6B7B7B7B8B8B9B9B9BABAB9B9BABABBBBBBBCBCBCBDBBBCBCBDBDBDBCBCBDBDBDBEBCBCBCBDBDBDBDBDBDBEBEBDBDBDBDBDBEBEBEBEBEBFBEBEBFBFBFBF><A1A1A2A2A3A3A4A5A5A3A4A4A5A5A6A6A7A8A8A9A9A9AAAAABABA9A9AAABABABACACABABABACACACADADABABACACACACACACACADADADADADADADADACACACADADADADADAD><8F8F909090919192929495959596969797979898989999999A9A9D9D9D9D9E9E9E9FA1A1A2A2A2A2A3A3A5A5A5A5A6A6A6A6A7A7A7A7A7A8A8A8A8A9AAAAAAAAAAABABAB><7376787A7C7E80828486888B8D8F919396989A9C9EA1A3A5A7A9ABADAFB1B3B5B7B9BCBEC0C2C4C5C6C8C9CACBCCCDCFD0D2D3D4D6D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><3D3C3B3A39383837363534333231302F2E2E2D2C2B2A29282726252424232221201F1E1D1C1B1A19191817161514131211100F0F0E0D0C0B0A0908070605050403020100><3F3E3D3C3B3A39383737363534333231302F2E2D2C2B2A29282727262524232221201F1E1D1C1B1A19181817161514131211100F0E0D0C0B0A0908080706050403020100><44434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242321201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.709804 0.631373 0.560784 0.45098 0.239216 0.247059 0.266667 2 50 0 %_BS%_0.709804 0.631373 0.560784 0.45098 0.239216 0.247059 0.266667 2 50 0 Bs0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 100 %_BS%_0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 100 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient 2)(Linear Gradient 2) 0 6 Bd[<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br[0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 2)(Radial Gradient 2) 1 6 Bd[0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br[0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Offset Squares Pattern)(Offset Squares Pattern) 0 0 55.0781 55.0801 [%AI3_Tile(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 55.0801 L55.0781 55.0801 L55.0781 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR26.1436 52.3262 m26.1436 29.4307 L3.03125 29.4307 L3.03125 52.3262 L26.1436 52.3262 Lf25.0264 50.123 m5.89063 50.123 L5.89063 32.4961 L25.0264 32.4961 L25.0264 50.123 Lf*U*u5.89063 50.123 m25.0264 50.123 L25.0264 32.4961 L5.89063 32.4961 L5.89063 50.123 Ln10.0313 34.2578 m24.1338 34.2578 L24.1338 48.3613 L10.0313 48.3613 L10.0313 34.2578 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR22.4082 48.793 m8.30566 48.793 L8.30566 34.6895 L22.4082 34.6895 L22.4082 48.793 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR52.6943 24.7852 m52.6943 1.67578 L28.9355 1.67578 L28.9355 24.7852 L52.6943 24.7852 Lf47.6777 22.582 m30.0527 22.582 L30.0527 4.95703 L47.6777 4.95703 L47.6777 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR30.0527 22.582 m50.6982 22.582 L50.6982 4.95703 L30.0527 4.95703 L30.0527 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR47.4199 21.252 m32.2393 21.252 L32.2393 6.50293 L47.4199 6.50293 L47.4199 21.252 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR27.5391 27.5391 m27.5391 0 L0 0 L0 27.5391 L27.5391 27.5391 Lf25.4316 26.1445 m2.75293 26.1445 L2.75293 2.16992 L25.4316 2.16992 L25.4316 26.1445 Lf*U*u4.95605 7.40039 m22.582 7.40039 L22.582 25.0273 L4.95605 25.0273 L4.95605 7.40039 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR22.582 5.67383 m4.95605 5.67383 L4.95605 25.0273 L22.582 25.0273 L22.582 5.67383 Lf20.3887 21.3281 m7.58105 21.3281 L7.58105 10.0313 L20.3887 10.0313 L20.3887 21.3281 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR6.93555 8.73633 m21.0371 8.73633 L21.0371 22.8379 L6.93555 22.8379 L6.93555 8.73633 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR55.0781 55.0801 m55.0781 27.5391 L27.5391 27.5391 L27.5391 55.0801 L55.0781 55.0801 Lf52.3252 50.9688 m30.292 50.9688 L30.292 28.9355 L52.3252 28.9355 L52.3252 50.9688 Lf*U*u30.292 50.9688 m52.3252 50.9688 L52.3252 28.9355 L30.292 28.9355 L30.292 50.9688 Ln32.4951 30.0527 m50.1221 30.0527 L50.1221 47.6777 L32.4951 47.6777 L32.4951 30.0527 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR50.1221 30.0527 m32.4951 30.0527 L32.4951 48.9727 L50.1221 48.9727 L50.1221 30.0527 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa 0 0.901961 0 0 1 0.2 0.6 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR34.9063 33.749 m49.0078 33.749 L49.0078 47.8506 L34.9063 47.8506 L34.9063 33.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7907.8833 8616.3486 m-7816.0479 8616.3486 L-7816.0479 8612.0693 L-7907.8833 8612.0693 L-7907.8833 8616.3486 Ln0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-7907.6631 8613.6689 m-7908 8613.7354 -7907.4814 8613.9248 -7907.8833 8613.7822 C-7907.8379 8613.6641 -7907.7725 8613.5752 -7907.6631 8613.6689 Cf-7817.1675 8613.835 m-7818.2529 8614.5977 -7819.6816 8613.8271 -7820.8701 8614.3135 C-7821.0098 8614.3457 -7820.8354 8613.8955 -7821.1484 8613.9961 C-7822.3008 8614.5889 -7824.1162 8614.2354 -7825.5195 8613.7783 C-7825.4346 8613.6602 L-7825.7021 8613.5752 -7826.0283 8613.9658 -7826.3115 8613.9111 C-7826.3135 8613.833 -7826.2207 8613.7998 -7826.2861 8613.6914 C-7826.3574 8613.9287 -7826.7979 8613.8018 -7826.9189 8613.9775 C-7827.0303 8613.8857 -7827.0195 8613.6982 -7827.1641 8613.5938 C-7827.3262 8613.8633 L-7827.7769 8614.5029 -7828.4209 8613.8193 -7829.0361 8614.1494 C-7829.0063 8614.0869 -7828.9453 8614.0381 -7828.9941 8613.9775 C-7829.9814 8614.3662 -7831.2168 8614.293 -7832.3208 8614.4365 C-7832.2769 8614.3418 -7832.2363 8614.1689 -7832.3008 8614.0615 C-7832.3555 8614.3447 -7832.6963 8614.416 -7832.9922 8614.4717 C-7833.1255 8614.1807 -7833.4995 8614.7373 -7833.8467 8614.5762 C-7833.8169 8614.5127 L-7834.0732 8614.8174 -7834.1973 8614.3369 -7834.4053 8614.7021 C-7834.5684 8614.4736 L-7834.6807 8614.8838 -7834.9395 8614.2607 -7835.1514 8614.4697 C-7835.1445 8614.5537 L-7835.3442 8614.6533 -7835.4482 8614.4473 -7835.6338 8614.5166 C-7835.6514 8614.4697 L-7836.0854 8614.5762 -7836.3379 8614.3486 -7836.3271 8614.6689 C-7836.4795 8614.4121 -7835.9063 8614.5518 -7836.1455 8614.1777 C-7837.5732 8614.5088 -7839.0459 8614.4434 -7840.4834 8614.4502 C-7840.6465 8614.3213 -7840.7505 8614.2822 -7840.7871 8614.1602 C-7840.9307 8614.2256 -7841.3281 8614.2197 -7841.4585 8614.3838 C-7841.4102 8614.377 -7841.5513 8614.2197 -7841.6274 8614.2041 C-7841.8887 8614.083 -7841.9131 8614.5557 -7842.2002 8614.4121 C-7842.0859 8614.3271 -7842.0469 8614.2236 -7842.0854 8614.1045 C-7842.3301 8614.3545 -7842.6577 8614.3145 -7842.9473 8614.3955 C-7842.9023 8614.3418 -7842.8325 8614.3096 -7842.8433 8614.209 C-7843.1602 8614.4922 -7843.4209 8614.1494 -7843.6982 8614.3281 C-7843.5947 8614.1436 L-7844.0415 8613.9189 -7843.7266 8614.5303 -7844.1128 8614.3975 C-7844.02 8614.3389 -7844.0527 8614.2666 -7844.0361 8614.1914 C-7844.3965 8614.5273 -7844.9795 8614.416 -7845.3389 8614.5303 C-7845.3174 8614.5049 -7845.3232 8614.4541 Y-7845.7148 8614.4961 -7846.1245 8614.3916 -7846.5552 8614.5381 C-7846.7119 8614.4561 -7846.5039 8614.0869 -7846.9185 8614.1553 C-7846.9033 8614.5264 -7847.6221 8614.3076 -7847.3779 8614.7275 C-7847.7319 8614.667 -7848.2925 8614.5273 -7848.5283 8614.6533 C-7848.3691 8614.5127 -7848.7007 8614.2002 -7848.4063 8614.1689 C-7848.6289 8613.9434 L-7848.5957 8613.792 -7848.3999 8613.9951 -7848.4707 8613.8037 C-7848.6182 8613.8193 -7849.0479 8613.9658 -7849.1797 8613.9053 C-7849.4531 8614.1328 -7849.7041 8614.5576 -7850.1465 8614.6045 C-7849.9385 8614.46 -7850.2646 8614.1953 -7850.1235 8614.1318 C-7850.7407 8614.8418 L-7850.8877 8614.8594 -7850.7725 8614.5498 -7850.9854 8614.6465 C-7850.9746 8614.7441 -7851.0674 8614.8057 -7851.1318 8614.8857 C-7851.1875 8614.8418 -7851.7441 8614.9775 -7851.8081 8614.6113 C-7851.8735 8614.4697 -7851.5684 8614.5361 -7851.7314 8614.4053 C-7852.0029 8614.4082 -7852.0151 8614.5342 -7852.2871 8614.54 C-7852.2925 8614.4912 L-7852.4717 8614.4365 -7852.8213 8614.6465 -7852.6265 8614.8486 C-7852.5015 8614.8594 -7852.6738 8614.6289 -7852.4888 8614.7354 C-7852.6152 8614.9473 -7852.9312 8615.0068 -7853.2031 8615.0098 C-7853.1104 8614.9521 -7853.1216 8614.8545 -7853.0845 8614.751 C-7853.4497 8615.0381 -7853.8369 8615.1289 -7854.2451 8615.249 C-7854.2515 8615.4229 -7854.0928 8614.9326 -7854.0327 8615.0244 C-7854.5557 8614.7832 -7855.1128 8615.3662 -7855.5479 8615.0137 C-7855.4766 8614.9834 -7855.5098 8615.2607 -7855.5146 8615.2119 C-7855.7666 8615.1904 -7855.7549 8614.9385 -7855.9189 8615.0313 C-7855.9355 8614.8838 -7856.1255 8615.0791 -7856.2944 8615.124 C-7856.3818 8615.2305 -7856.3384 8615.0518 -7856.1914 8615.0361 C-7856.4268 8615.1602 -7857.3691 8615.3877 -7857.9131 8615.1729 C-7857.9023 8615.2705 -7858.2471 8615.5313 -7858.3721 8615.5205 C-7858.3232 8615.292 L-7858.4375 8615.1553 -7858.7422 8615.3115 -7858.7632 8615.1162 C-7859.0303 8615.3936 -7857.7344 8614.8799 -7858.0957 8615.0938 C-7858.1895 8614.9033 -7858.5991 8615.458 -7858.5215 8615.1465 C-7858.7725 8615.1553 -7859.0161 8615.4121 -7859.2559 8615.1982 C-7859.1865 8615.2354 -7859.0522 8614.8809 -7859.2549 8614.8975 C-7859.6123 8614.9385 -7859.3564 8615.0068 -7859.6465 8615.083 C-7859.8281 8615.1768 L-7859.8398 8615.3994 -7860.1475 8615.1465 -7860.0146 8615.3955 C-7860.0586 8615.2119 -7860.5337 8615.5088 -7860.4971 8615.1396 C-7860.4473 8614.8486 L-7860.6016 8614.8701 -7860.7002 8615.1553 -7860.8213 8615.2832 C-7860.8418 8615.2568 -7860.8823 8615.1982 -7860.8745 8615.1514 C-7860.8994 8615.5967 -7861.2432 8615.1143 -7861.4268 8615.458 C-7861.7505 8615.3037 -7862.2495 8615.4434 -7862.4023 8615.167 C-7862.6514 8615.3018 -7862.8784 8615.4609 -7863.1621 8615.3662 C-7863.1055 8615.3242 -7863.0283 8615.3115 -7863.0122 8615.2158 C-7863.1904 8615.085 -7863.2344 8615.2021 -7863.3975 8615.2744 C-7863.3608 8615.208 -7863.7539 8615.0137 -7863.9521 8614.8564 C-7864.1992 8614.9893 -7864.1143 8615.2295 -7864.1392 8615.376 C-7864.3652 8614.9365 -7864.8379 8615.6592 -7865.1211 8615.2607 C-7865.0352 8615.2002 -7864.7598 8615.0449 -7864.9658 8614.9346 C-7865.1919 8614.4961 -7865.4219 8615.2578 -7865.7861 8615.0479 C-7865.6968 8615.4121 L-7865.8594 8615.1865 -7866.2334 8615.624 -7866.1963 8615.2529 C-7866.3184 8615.3838 -7866.6265 8615.1318 -7866.5859 8615.4873 C-7867.1846 8615.1865 -7868.0425 8615.6689 -7868.4102 8615.0313 C-7868.4961 8615.0908 -7868.7104 8615.0303 -7868.6665 8615.2129 C-7868.5239 8615.4111 -7868.4673 8615.0713 -7868.4141 8615.2061 C-7868.4912 8615.2168 -7868.5078 8615.3145 -7868.5161 8615.3633 C-7868.7021 8615.2822 -7868.8486 8615.2568 -7868.6729 8614.9609 C-7869.0869 8614.7412 -7869.1001 8615.5654 -7869.6274 8615.4258 C-7869.6035 8615.2793 -7869.6436 8615.2236 -7869.7979 8615.2471 C-7870.0903 8615.499 L-7870.4312 8615.4404 -7870.2842 8615.1641 -7870.2925 8614.915 C-7870.4746 8614.958 -7870.6973 8614.9463 -7870.7803 8615.1318 C-7871.0015 8614.8193 L-7870.8398 8615.0449 -7871.1514 8614.9697 -7871.2368 8615.0303 C-7871.1514 8614.9697 L-7871.1846 8614.8633 -7871.3955 8614.9287 -7871.5024 8614.96 C-7871.4766 8615.1143 -7871.2617 8615.1768 -7871.1445 8615.2217 C-7871.2373 8615.3311 -7871.3823 8615.3057 -7871.5059 8615.4346 C-7871.4648 8615.1904 -7871.8027 8615.2607 -7871.9473 8615.2354 C-7872.1133 8615.1826 -7872.1348 8615.4541 -7872.1831 8615.4463 C-7872.1875 8615.3193 -7872.4541 8615.4248 -7872.3247 8615.2471 C-7872.2681 8615.2061 -7872.1953 8615.3701 -7872.1016 8615.2578 C-7872.2109 8615.1641 -7872.1982 8614.9434 -7872.4258 8615.1045 C-7872.5967 8615.2256 -7872.3818 8615.5869 -7872.7061 8615.4326 C-7872.6211 8615.3721 -7872.6055 8615.2744 -7872.5391 8615.1865 C-7872.8433 8615.0596 L-7872.8564 8615.2822 L-7872.8975 8615.2256 -7872.8691 8615.2061 -7872.8877 8615.1768 C-7872.9785 8615.4111 -7873.3521 8615.249 -7873.4209 8615.5127 C-7873.5742 8615.5361 -7873.7441 8615.3584 -7873.8906 8615.333 C-7873.8623 8615.3135 L-7874.0415 8615.1826 -7874.2793 8615.2686 -7874.4297 8615.4189 C-7874.4219 8615.3701 L-7874.5195 8615.3525 -7874.7505 8615.3877 -7874.8735 8615.5186 C-7875.1201 8615.3506 -7874.9561 8614.6777 -7875.2295 8614.958 C-7875.48 8614.9658 -7875.6221 8615.3662 -7875.5215 8615.5088 C-7875.9717 8615.3584 -7876.4834 8615.7217 -7876.9009 8615.376 C-7876.9658 8615.4658 -7876.9248 8615.5225 -7877.0586 8615.5752 C-7877.7197 8615.4873 -7878.4551 8615.8389 -7878.9814 8615.4014 C-7878.79 8615.3076 -7878.9688 8615.1777 -7878.9727 8615.0518 C-7879.1309 8615.251 -7879.1631 8614.8447 -7879.2197 8615.1865 C-7879.2041 8615.3877 -7879.2197 8615.4854 -7879.0337 8615.5664 C-7879.4282 8615.6748 -7880.0283 8615.6748 -7880.2471 8615.4873 C-7880.1377 8615.5801 -7880.2227 8615.6416 -7880.3086 8615.7021 C-7880.2803 8615.3809 -7880.5713 8615.333 -7880.7915 8615.4463 C-7880.8223 8615.6416 L-7880.9658 8615.4404 L-7881.0503 8615.5029 -7881.0591 8615.8506 -7881.2773 8615.6631 C-7881.2891 8615.5869 -7881.3018 8615.5098 -7881.3418 8615.4541 C-7881.5693 8615.6143 -7881.8906 8615.8857 -7882.1377 8615.7197 C-7882.3398 8615.4346 L-7882.4453 8615.4658 -7882.6235 8615.6377 -7882.4375 8615.7197 C-7882.8594 8615.5479 -7883.1309 8615.5264 -7883.2646 8615.2793 C-7883.9912 8615.8809 -7885.0459 8615.9053 -7885.8906 8615.8623 C-7885.8652 8615.7158 L-7886.0923 8615.5791 -7885.9834 8615.9717 -7886.1416 8615.8701 C-7886.0684 8615.7305 -7886.3145 8615.5664 -7886.1362 8615.3955 C-7886.4609 8615.2412 -7886.5547 8615.6494 -7886.7656 8615.7158 C-7886.7979 8615.9082 -7886.5957 8615.5928 -7886.6367 8615.8369 C-7886.6729 8615.9053 -7887.0859 8615.6865 -7887.1362 8615.9775 C-7887.2178 8615.8633 -7887.1543 8615.6494 -7887.1104 8615.5313 C-7887.3086 8615.6729 L-7887.5513 8615.333 -7886.7559 8615.0654 -7887.0107 8614.6465 C-7887.1934 8614.6914 L-7887.3682 8614.3877 -7886.71 8614.3486 -7887.1689 8614.2441 C-7887.3682 8614.3877 -7887.5381 8614.8096 -7887.3608 8614.9385 C-7887.7754 8615.0186 -7887.5527 8615.6318 -7887.9985 8615.6074 C-7888.1201 8615.4365 -7887.6416 8615.5664 -7887.7275 8615.3271 C-7887.9375 8615.0928 -7888.1484 8615.458 -7888.3354 8615.376 C-7888.1279 8615.4854 -7888.3032 8615.7793 -7888.4375 8615.833 C-7888.6641 8615.6953 -7888.29 8615.5576 -7888.6113 8615.5273 C-7888.6641 8615.6953 -7888.9595 8615.8213 -7888.7041 8615.9385 C-7888.8203 8616.3193 -7889.0381 8615.833 -7889.2129 8616.1279 C-7889.3174 8615.8594 -7888.8823 8615.5088 -7889.2354 8615.375 C-7889.1792 8615.6328 -7889.6704 8615.7256 -7889.4839 8616.1074 C-7889.6221 8616.0342 -7889.6367 8615.8311 -7889.5361 8615.6729 C-7889.7334 8615.5137 -7890.0151 8616.1436 -7890.0801 8615.6318 C-7890.1479 8615.8955 L-7890.21 8615.8096 -7890.2983 8615.7441 -7890.3994 8615.6025 C-7890.5732 8615.5977 -7890.96 8615.96 -7890.9443 8615.5615 C-7891 8615.6025 -7891.3975 8615.585 -7891.2441 8615.8594 C-7890.9971 8616.0273 -7890.96 8615.6592 -7890.8223 8616.0313 C-7890.9971 8615.7275 -7891.1787 8616.0713 -7891.3213 8616.1729 C-7891.3447 8616.0186 L-7891.4297 8616.0791 -7891.6255 8616.0449 -7891.6787 8616.2119 C-7891.6133 8616.124 -7891.6475 8616.0186 -7891.7148 8615.9814 C-7891.8042 8616.2158 L-7892.1494 8616.333 -7891.8857 8615.8037 -7892.2217 8615.8721 C-7891.9663 8615.6904 L-7892.0225 8615.7295 -7892.1367 8615.5098 -7892.2979 8615.583 C-7892.3604 8615.7969 -7892.4775 8616.0537 -7892.5313 8616.2197 C-7892.7207 8616.3135 -7892.6162 8615.9785 -7892.8027 8616.1982 C-7892.5586 8615.9404 L-7892.5215 8615.8701 -7892.7231 8615.5869 -7892.9761 8615.5928 C-7893.1377 8615.667 -7893.3887 8615.9756 -7893.1338 8616.0928 C-7893.2607 8616.0967 -7893.4385 8615.9658 -7893.3379 8615.8096 C-7893.6255 8615.8838 -7893.2998 8616.04 -7893.5479 8616.1729 C-7893.6494 8616.0303 -7893.9658 8615.8271 -7894.1563 8615.6201 C-7893.8975 8615.2617 L-7894.0693 8615.2578 L-7893.8467 8614.9717 -7894.1826 8615.04 -7894.0566 8614.7373 C-7894.1743 8614.6904 -7894.3169 8614.793 -7894.4307 8614.8721 C-7894.0864 8615.3564 -7894.8159 8615.5342 -7894.7158 8615.9756 C-7895.1875 8616.0967 -7895.0107 8614.9014 -7895.5024 8615.5928 C-7895.4219 8615.708 -7895.6533 8616.0439 -7895.3564 8615.916 C-7895.6494 8615.8682 -7895.5557 8616.3594 -7895.9014 8616.1768 C-7895.6455 8615.9951 -7896.1763 8615.7295 -7895.8066 8615.4658 C-7895.8311 8615.6113 -7895.6001 8615.5762 -7895.5435 8615.5361 C-7895.6641 8615.3662 -7895.5186 8615.0908 -7895.8184 8615.0908 C-7896.0015 8615.1328 -7896.2524 8615.1416 -7896.2158 8615.3721 C-7896.2085 8615.625 -7895.9365 8615.3447 -7896.0537 8615.6006 C-7896.4185 8615.6885 -7896.4795 8615.3037 -7896.6304 8615.7529 C-7896.3999 8615.7168 -7896.3423 8615.9775 -7896.3467 8616.1514 C-7896.6143 8616.2568 L-7896.5625 8616.0889 L-7896.9922 8615.9678 -7896.6895 8616.3936 -7897.1055 8616.3486 C-7897.3008 8616.0166 L-7897.2017 8615.7305 -7896.6953 8616.1436 -7896.7695 8615.6777 C-7897.04 8615.6592 -7897.1299 8615.8955 -7897.3848 8615.7754 C-7897.3281 8615.7354 -7897.2505 8615.7236 -7897.1943 8615.6826 C-7897.2915 8615.667 -7897.3877 8615.0498 -7897.7734 8615.4111 C-7897.9727 8615.5518 -7897.8262 8615.5762 -7897.8311 8615.751 C-7898.2656 8615.8037 -7898.3955 8615.9814 -7898.6753 8616.0088 C-7898.6177 8615.6689 -7899.1699 8615.9756 -7898.8608 8615.6279 C-7898.7188 8615.8271 -7898.0903 8615.8076 -7897.9365 8615.4834 C-7898.0947 8615.0801 -7897.5952 8615.54 -7897.5024 8615.1318 C-7897.8506 8615.1221 -7897.8335 8614.7256 -7897.8896 8614.4658 C-7897.9863 8614.4473 -7898.0801 8614.5576 -7898.1377 8614.5977 C-7898.1787 8614.8418 -7898.0522 8614.8389 -7898.0449 8615.0908 C-7898.4336 8615.0244 -7898.8081 8615.1602 -7899.0225 8615.3994 C-7899.1523 8615.2783 -7899.1113 8615.0342 -7898.9575 8615.0098 C-7899.4199 8615.083 -7899.9141 8615.0498 -7900.3535 8614.9756 C-7900.0693 8615.375 -7900.8433 8615.0693 -7900.6494 8615.4014 C-7900.4141 8615.4912 -7900.2119 8615.7754 -7900.3418 8615.9541 C-7900.4888 8615.9287 -7900.3369 8615.7793 -7900.3984 8615.6943 C-7900.5859 8615.9121 -7900.6895 8615.3447 -7900.8735 8615.6885 C-7900.4512 8615.5596 -7900.7915 8615.2021 -7900.7139 8614.8896 C-7901.0186 8615.0654 -7900.7007 8614.667 -7901.0024 8614.667 C-7901.3057 8614.8408 -7901.6787 8614.9775 -7902.0161 8615.0449 C-7902.4399 8614.749 -7903.0898 8615.04 -7903.4683 8615.0518 C-7903.6665 8614.8936 -7903.5322 8614.54 -7903.7471 8614.4785 C-7903.9995 8614.4854 -7903.5601 8614.8594 -7903.9336 8614.6982 C-7903.8975 8614.6279 L-7904.0107 8614.709 -7904.5825 8614.3877 -7904.6929 8614.8955 C-7904.5776 8614.5127 L-7904.6475 8614.4775 -7904.7119 8614.5654 -7904.7695 8614.6064 C-7904.7725 8614.4814 -7904.8535 8614.3682 -7904.7402 8614.2861 C-7904.9707 8614.0225 -7905.2241 8614.3281 -7905.4746 8614.3389 C-7905.3135 8614.5654 L-7905.7422 8614.7432 -7906.0293 8614.5186 -7906.4443 8614.5977 C-7906.4316 8614.376 L-7906.6787 8614.5088 L-7906.6182 8614.293 -7906.8447 8614.1553 -7906.9751 8614.335 C-7906.3335 8613.792 L-7906.1553 8613.9229 -7906.5283 8614.0596 -7906.4165 8614.2783 C-7906.3213 8614.4697 -7905.9375 8614.4082 -7905.8755 8614.1953 C-7906.0225 8614.1709 -7906.0293 8614.2197 -7906.1436 8614.2998 C-7906.1919 8613.9912 -7905.9688 8614.0029 -7905.8584 8613.7969 C-7905.9355 8613.8096 -7906.0449 8613.7158 -7906.0615 8613.8135 C-7905.9102 8613.6631 -7905.7578 8613.6396 -7905.5059 8613.6318 C-7905.6763 8613.7529 -7905.4131 8613.8232 -7905.4775 8613.9111 C-7905.4575 8613.6396 -7905.2168 8613.5557 -7904.9053 8613.6318 C-7904.6831 8613.9463 -7904.3208 8613.4297 -7903.96 8613.5166 C-7904.1064 8613.792 -7904.2935 8614.0127 -7904.5127 8614.124 C-7904.2861 8614.2617 -7904.2607 8614.1162 -7904.0337 8614.2549 C-7903.9238 8614.0498 -7903.8457 8613.7354 -7903.5503 8613.6104 C-7903.5342 8613.8135 L-7903.2666 8613.709 -7903.2666 8613.4082 -7902.9258 8613.4658 C-7902.3418 8613.5654 -7901.7407 8613.5654 -7901.2949 8613.5908 C-7901.2783 8613.793 L-7901.0303 8613.3594 -7900.4521 8613.6328 -7900.1182 8613.4404 C-7899.5503 8613.6357 -7898.8848 8613.2471 -7898.5938 8613.5967 C-7897.5913 8613.4404 -7896.7148 8613.2881 -7895.6768 8613.3623 C-7895.8516 8613.6572 L-7895.6655 8613.4404 -7895.7305 8613.8271 -7895.5479 8613.7832 C-7895.7578 8613.5479 -7895.2949 8613.4775 -7895.1665 8613.2969 C-7894.7041 8613.5264 -7894.1104 8613.2754 -7893.7007 8613.0693 C-7893.6846 8613.2725 L-7893.2705 8612.8916 -7892.7759 8613.2256 -7892.2598 8613.2881 C-7892.2007 8613.3721 -7892.1074 8613.5625 -7891.9536 8613.54 C-7891.6738 8613.2119 -7891.5273 8613.2354 -7891.1167 8613.0303 C-7890.8169 8613.0303 -7890.3301 8613.1113 -7890.0254 8613.2393 C-7888.8975 8612.7783 -7887.7456 8613.0732 -7886.5732 8612.7959 C-7886.4888 8613.0342 L-7885.3521 8612.5244 -7883.9541 8612.9873 -7882.9839 8612.7256 C-7883.0776 8613.1328 L-7882.7734 8613.2578 -7882.3843 8613.0264 -7882.4619 8612.7373 C-7882.1567 8612.8623 -7881.7007 8612.54 -7881.5068 8612.875 C-7881.1953 8612.9502 -7881.1255 8612.6865 -7880.8662 8612.6318 C-7880.2422 8612.7861 -7880.0107 8612.751 -7879.4224 8612.6748 C-7879.5684 8612.6494 L-7879.6328 8612.7393 -7879.6387 8612.9121 -7879.4922 8612.9385 C-7879.2725 8612.8242 -7878.6846 8613.0479 -7878.9033 8612.5615 C-7878.2754 8612.8418 -7877.4385 8612.333 -7876.8271 8612.7119 C-7876.8789 8612.5791 -7876.7246 8612.5537 -7876.6602 8612.4639 C-7876.1089 8612.458 -7875.5293 8612.7295 -7875.0898 8612.5029 C-7875.0024 8612.5693 -7875.2295 8612.7295 -7875.0049 8612.7432 C-7874.8721 8612.6914 -7875.0024 8612.5693 -7874.8384 8612.4951 C-7873.9453 8612.2471 -7873.0303 8612.751 -7872.2188 8612.6865 C-7870.7754 8612.4297 -7869.2695 8612.5596 -7867.8867 8612.5166 C-7867.9023 8612.6143 L-7867.4395 8612.2412 -7866.8159 8612.9961 -7866.4463 8612.4346 C-7866.3369 8612.5273 -7866.0283 8612.4785 -7866.1094 8612.667 C-7865.7407 8612.4033 -7865.0771 8612.915 -7864.5439 8612.5801 C-7864.5928 8612.5713 -7864.6211 8612.5908 -7864.6777 8612.6328 C-7864.1392 8612.8486 -7863.6641 8612.5537 -7863.0957 8612.749 C-7863.1533 8612.791 -7863.2583 8612.8213 -7863.2754 8612.9189 C-7863.0557 8613.1064 -7862.7549 8612.5068 -7862.6348 8612.9775 C-7862.5088 8612.9736 -7862.5449 8612.7412 -7862.6221 8612.7549 C-7861.3779 8612.9385 -7860.0498 8612.6377 -7858.7549 8612.5303 C-7857.8271 8612.8115 -7858.6982 8613.3232 -7857.9663 8612.9717 C-7857.9063 8613.0625 -7857.9229 8612.792 -7857.9131 8612.8896 C-7857.6299 8612.7578 -7857.4717 8613.415 -7857.2754 8613.1689 C-7857.3564 8612.8799 -7857.1445 8613.0068 -7857.1387 8612.8311 C-7856.5713 8613.0186 -7856.4575 8613.2793 -7856.0098 8613.0596 C-7856.0435 8613.2119 L-7855.5186 8612.7822 -7854.9102 8613.0127 -7854.4673 8612.5166 C-7851.5728 8612.4258 -7848.7983 8612.1514 -7845.9761 8612.0938 C-7843.1865 8612.1885 -7840.4551 8611.9658 -7837.6221 8612.2295 C-7836.9585 8612.6289 -7836.9087 8612.6182 -7836.1797 8612.4561 C-7836.2095 8612.5205 -7836.2549 8612.5361 -7836.2061 8612.5967 C-7836.1699 8612.2686 -7835.6929 8612.5654 -7835.6235 8612.2529 C-7834.5762 8612.3135 -7833.6113 8612.2236 -7832.5337 8612.2217 C-7832.7041 8612.2568 -7832.7896 8612.5244 -7832.5869 8612.5029 C-7832.3755 8612.293 L-7832.3408 8612.3857 L-7832.2021 8612.3369 -7832.0513 8612.1748 -7832.1943 8612.0693 C-7829.4873 8611.7861 -7826.8242 8612.4434 -7824.1729 8612.3633 C-7823.5439 8612.5 -7822.6475 8612.375 -7821.9629 8612.3076 C-7819.9355 8612.7441 -7818.1084 8613.0977 -7816.0479 8612.792 C-7816.3174 8613.6396 -7817.1675 8613.835 Vf-7907.2578 8613.6357 m-7907.1855 8613.7998 -7906.9497 8613.8896 -7907.1377 8614.1074 C-7907.1611 8613.9541 -7907.2822 8613.7822 -7907.2578 8613.6357 Cf-7900.9619 8615.3232 m-7900.9536 8615.2744 -7900.8721 8615.3896 -7900.8521 8615.416 C-7900.9297 8615.4287 -7901.0024 8615.5664 -7901.0645 8615.4814 C-7900.9854 8615.4697 -7900.9976 8615.3916 -7900.9619 8615.3232 Cf-7899.3521 8615.4209 m-7899.3765 8615.5664 -7899.7207 8615.6826 -7899.9238 8615.7002 C-7899.3521 8615.4209 Lf-7897.8521 8616.0225 m-7897.7227 8616.1455 -7897.7583 8616.2129 -7897.9326 8616.209 C-7897.9453 8616.1318 -7897.8877 8616.0928 -7897.8521 8616.0225 Cf-7897.7456 8615.6904 m-7897.6211 8615.6865 -7897.5591 8615.7725 -7897.4985 8615.8564 C-7897.5029 8615.7305 -7897.7871 8615.9346 -7897.7456 8615.6904 Cf-7894.4893 8616.1143 m-7894.4111 8616.1025 -7894.2417 8615.9814 -7894.1689 8616.1436 C-7894.2505 8616.0303 -7894.5498 8616.3281 -7894.4893 8616.1143 Cf-7892.9761 8615.8936 m-7892.9272 8615.9033 -7892.9072 8615.9297 -7892.8506 8615.8896 C-7892.7607 8615.9561 -7892.8555 8616.0625 -7892.9312 8616.0762 C-7892.9761 8615.8936 Lf-7865.4287 8615.3076 m-7865.5923 8615.3799 L-7865.5684 8615.2354 L-7865.4287 8615.3076 Lf-7853.3574 8615.2998 m-7853.1943 8615.208 -7853.2441 8615.4365 -7853.2168 8615.458 C-7853.3643 8615.4736 -7853.1621 8615.2783 -7853.3574 8615.2998 Cf-7846.8486 8614.5713 m-7846.8984 8614.5752 L-7846.8818 8614.2754 L-7846.8486 8614.5713 LfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -(ush Tool/ Charcoal/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -(1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.74902 0.678431 0.670588 0.901961 0 0 0 Xa(Black)Pc0 0.992157 1 0 1 0 0 Xa(RGB Red)Pc0.062745 0 0.964706 0 1 1 0 Xa(RGB Yellow)Pc0.627451 0 1 0 0 1 0 Xa(RGB Green)Pc0.517647 0 0.12549 0 0 1 1 Xa(RGB Cyan)Pc0.882353 0.768627 0 0 0 0 1 Xa(RGB Blue)Pc0.270588 0.815686 0 0 1 0 1 Xa(RGB Magenta)Pc0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.87451 0.52549 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)PcBb2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 2)PcBb0 0 0 0 Bh2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 2)Pc(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Offset Squares Pattern)Pc0 g(K=100)Pc0.1 g(K=90)Pc0.2 g(K=80)Pc0.3 g(K=70)Pc0.4 g(K=60)Pc0.5 g(K=50)Pc0.6 g(K=40)Pc0.7 g(K=30)Pc0.8 g(K=20)Pc0.9 g(K=10)Pc0.95 g(R=241 G=241  B=242)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au1 Ap0 O0 J 0 j 1 w 4 M []0 d0 XR521.8818 93.7822 m19.8906 93.7822 L19.8906 693.9404 L521.8818 693.9404 L521.8818 93.7822 LBb0 0 0 0 Bh1 (Unnamed gradient 90) 198.353 512.0576 -56.1779 303.4543 1 0 0 1 0 0 Bg168.9077 -252.1006 -252.1006 -168.9077 198.353 512.0576 Bmf0 BBu0 Ap191.2539 270.4414 m192.5942 273.585 193.4321 276.9209 194.8286 280.043 c196.397 283.5498 199.0879 285.5508 201.0254 288.4697 C198.252 289.9521 195.6982 291.8574 195.0801 295.1582 C188.9531 286.9834 186.6719 279.5205 184.6851 269.8086 c183.1602 262.3545 183.8291 253.832 179.6733 247.1396 c174.4775 238.7725 163.9985 234.6182 156.7246 228.4492 c152.7251 224.9688 149.7549 220.4541 148.2729 215.3066 c146.6567 209.9414 148.6943 204.3408 150.7432 199.998 c152.9424 195.8613 152.2056 191.2441 148.2134 188.9395 c144.4668 186.5869 139.7725 185.6885 135.439 183.8135 C130.1641 182.0977 127.2393 177.6875 125.1294 172.8389 c124.1265 170.5303 123.3008 168.1328 122.439 165.7715 c122.0088 164.5879 121.1514 163.3291 120.4341 162.3086 c120.1499 161.9063 117.7769 159.5576 117.7847 159.5869 c120.396 168.8691 120.5508 178.7422 123.2036 188.0332 c126.9517 201.1689 134.3823 211.167 142.1074 222.1172 c145.3496 226.8262 148.8521 231.627 151.6064 236.4063 c158.1274 247.7217 162.7217 260.0586 167.7314 272.0801 c171.8115 281.8662 180.8076 291.0869 183.4478 300.9951 C183.3154 301.1123 183.188 301.2383 183.0664 301.3662 c180.5825 303.9854 162.9951 264.1748 161.7954 260.8701 c154.7119 241.3418 143.4526 225.875 131.0605 208.6211 c126.4873 202.0762 122.7715 196.3682 119.6768 188.5205 c116.1035 178 117.4639 163.5273 110.6841 154.4521 c110.0195 153.5635 116.6885 152.1807 117.5352 152.4307 c120.2896 153.2393 121.4419 156.0166 122.9741 158.1123 C124.2373 160.2861 125.0869 162.5439 125.7666 164.7148 c127.127 169.0576 128.1133 173.2285 130.3164 176.7539 C134.1372 184.0127 146.7817 182.8418 152.5566 191.4355 C154.9385 196.3311 151.4302 200.8428 150.0513 205.0967 C148.2656 209.5225 148.9023 214.7236 151.1855 218.8965 c155.4688 227.8428 165.0498 231.6758 172.082 236.4521 c183.5645 243.748 186.1064 258.375 191.2539 270.4414 cBb1 (Unnamed gradient 66) 110.6377 226.9463 0 90.3877 1 0 0 1 0 0 Bg90.3877 0 0 -155.8047 110.6377 305.9854 Xm8022.2554 0 0 -155.8047 -7911.6177 305.9854 Bc90.3877 0 0 -155.8047 110.6377 305.9854 Bm8022.2554 0 0 -155.8047 201.0254 305.9854 Bcf0 BBu287.4014 588.3628 m287.4473 587.5737 287.4961 586.7939 287.5391 586.0249 c288.0771 576.4131 283.2275 565.8105 281.2944 556.3647 c279.4106 546.3291 274.6519 537.6768 269.4038 529.0015 c262.9209 518.2803 264.8291 507.3755 253.0576 499.3657 c248.083 495.9824 240.4316 494.1211 237.1812 488.8315 C241.3276 495.5767 256.1313 495.1646 262.7646 497.2104 c274.4873 500.8232 277.8403 507.1172 279.9141 518.5889 c285.8916 546.6572 289.9678 567.6279 293.3535 577.7388 c296.8818 588.0029 292.3984 604.5352 301.8828 611.1953 c309.2441 616.3657 320.1055 615.8535 326.2832 622.9961 C321.4736 617.4346 302.9102 618.8647 295.8203 614.4297 c286.4482 608.5659 286.8447 597.833 287.4014 588.3628 cBb1 (Unnamed gradient 63) 210.6191 552.1328 3.04388 483.7271 1 0 0 1 0 0 Bg483.0446 25.6863 7.07531 -133.0552 207.0815 618.6602 Xm8087.0303 430.0341 7.07531 -133.0552 -7879.9487 188.626 Bc483.0446 25.6863 7.07531 -133.0552 207.0815 618.6602 Bm8087.0303 430.0341 7.07531 -133.0552 690.126 644.3462 Bcf0 BB0.682353 0.611765 0.603922 0.494118 0.239216 0.239216 0.239216 Xa364.6514 406.3955 m368.7285 403.4902 372.1104 400.3145 374.3262 394.5938 c377.2705 386.9912 380.0713 372.3467 374.6436 365.5713 c369.1465 358.709 360.6729 357.0664 353.2588 357.6816 c348.6035 358.0684 343.666 358.6729 339.3047 360.3125 c335.5127 361.7373 332.3916 363.625 328.2227 361.2188 c321.9043 357.5703 323.3828 349.9023 323.2793 343.7607 c323.0088 327.8086 309.0537 329.7246 296.959 329.2295 C299.6973 325.0039 309.1533 325.9248 313.4951 326.3193 c320.334 326.9395 325.2695 329.9326 328.6699 335.8174 c330.9473 339.7588 332.6758 344.7461 336.2012 347.7959 c340.5791 351.583 346.4941 349.9678 351.4873 348.5166 c356.7119 346.999 361.4053 346.1543 366.9209 345.9443 c377.9023 345.5264 391.8271 353.3223 397.0918 363.7803 c402.2236 372.7607 402.416 384.2744 399.5146 392.4434 c396.7051 400.8809 391.668 407.1543 386.5088 412.2354 c380.1445 418.4365 371.6914 423.9834 369.9072 432.0303 c368.0322 440.7769 372.5273 448.6113 368.2646 456.7603 c364.4951 464.1079 360.291 471.627 361.543 480.6948 c362.9531 489.6987 370.8662 495.8833 374.8818 502.8345 c382.4043 515.2979 387.5859 533.6963 407.5713 540.2891 C398.7578 538.0703 386.5225 536.6245 379.0586 529.6572 c373.1455 524.2915 370.4766 516.5898 367.1504 510.417 c358.6338 494.5562 351.3887 476.4536 356.5439 458.2354 C358.458 452.8931 360.1523 446.0054 358.3223 440.5566 c356.415 434.8804 352.4063 430.1499 350.3271 424.5337 c348.1465 418.6445 352.4648 414.7852 357.1445 411.4814 c359.8135 409.5977 362.3438 408.04 364.6514 406.3955 cf270.958 439.3936 m270.9243 434.5537 272.9048 429.4946 272.6572 424.7959 C272.7559 418.9453 268.6748 411.9443 262.5 410.8857 c252.3027 409.2334 245.8813 417.3418 238.791 423.2793 c232.104 428.8794 224.9702 426.4478 217.2944 428.9243 C224.7759 426.5098 231.6108 424.1289 237.2939 418.4063 c242.7437 412.9199 246.7822 406.2158 252.5439 400.999 c258.3628 395.7266 269.0254 392.9961 274.3765 400.6201 c279.2998 407.6279 273.1367 417.1162 282.8218 420.2578 c286.3262 421.3926 288.3721 420.5977 290.2402 424.1807 c295.5361 434.3584 287.0918 451.7275 300.7979 457.4102 c303.7549 458.6396 307.1914 456.4868 310.3252 458.6763 c313.9648 461.2207 311.9912 463.1348 313.8779 466.0518 c318.9775 473.9399 322.1133 470.1294 330.5283 470.2017 c343.5635 470.3125 350.2471 495.3726 359.2686 494.353 C345.7188 495.8853 341.8535 483.9341 331.877 479.3179 c323.4648 475.4272 311.7158 478.8062 304.4824 472.0313 c299.6035 467.4639 296.6768 460.3647 290.8623 456.8276 c284.8047 453.1431 278.8359 452.7339 273.8076 447.375 c271.6323 445.0078 270.9204 442.1733 270.958 439.3936 cfU196.1348 471.1455 m197.7832 476.0874 200.2036 480.9058 202.5684 485.042 C201.8477 485.1074 201.1099 485.2139 200.3247 485.4019 c200.0908 485.4575 199.8682 485.5493 199.6382 485.6235 C193.3101 474.1748 189.2539 461.6475 191.7427 448.6299 C193.0254 450.3374 194.834 450.0879 196.3896 450.6914 C193.7646 453.5581 193.2036 462.3892 196.1348 471.1455 cBb1 (Unnamed gradient 70) 139.8159 561.0098 -58.664 263.5603 1 0 0 1 0 0 Bg137.0661 -225.1154 -27.4886 -16.737 153.5605 569.3784 Xm4137.207 -6794.8901 -27.4886 -16.737 -3983.6465 7364.2686 Bc137.0661 -225.1154 -27.4886 -16.737 153.5605 569.3784 Bm4137.207 -6794.8901 -27.4886 -16.737 290.627 344.2627 Bcf0 BBu299.3076 505.6543 m302.8232 501.3213 314.6816 497.8545 305.4199 492.0542 c300.6084 489.042 296.043 491.8975 291.002 491.3765 c276.8296 489.9087 279.8857 478.6406 273.2383 470.752 c265.8848 462.0293 259.6055 470.6528 252.0874 473.0693 c239.8877 476.9902 242.6733 465.5796 238.6255 458.8359 c228.4038 441.814 220.3467 472.3936 219.1587 478.209 c217.6914 485.3955 209.8647 486.2959 203.1206 485.8125 c189.3506 484.8262 185.1001 499.4727 195.0259 508.1699 c198.6953 511.3848 206.1152 513.4136 207.2114 518.6816 c209.9048 531.6465 188.9438 520.3687 186.6445 530.6797 C187.9639 520.8354 201.1841 526.3311 202.6479 519.8091 c203.4746 516.1191 192.2964 510.5645 190.0859 508.0244 c186.1582 503.5093 181.2437 491.3594 186.9668 486.1919 c192.8218 480.9028 203.2031 484.3213 210.0186 482.7251 C219.1465 482.9434 216.2847 470.6919 221.479 460.2534 C224.103 455.5522 228.2676 450.5952 234.7739 450.1035 C241.4287 450.1567 245.4917 455.4985 247.5044 460.2979 c249.2871 464.811 251.8867 468.999 256.6328 466.7065 C260.709 464.9297 266.0962 462.6997 271.0435 464.8389 C276.2373 466.7681 278.0542 472.189 280.4512 476.0278 C282.7935 480.2339 286.7012 482.9551 291.6084 482.4268 c298.7334 481.6567 306.623 482.2114 311.8604 486.668 c316.5127 490.5112 320.8135 499.019 316.2695 502.6396 C314.0166 504.2729 310.8203 503.6875 307.3086 503.7998 C304.1328 503.5718 298.6963 505.4517 298.6445 510.2222 C298.9824 513.5269 300.5811 516.2944 302.8613 518.2788 C297.4736 516.2178 294.2744 511.8579 299.3076 505.6543 cBb0 0 0 0 Bh1 (Unnamed gradient 74) 194.311 436.5933 -27.4496 224.3839 1 0 0 1 0 0 Bg199.122 -103.4338 -103.4338 -199.122 194.311 436.5933 Bmf0 BB354.2402 556.5664 m352.3721 555.772 350.7549 554.3887 349.71 552.3076 c347.8027 548.5059 352.4375 544.6201 350.4814 541.2173 c348.6885 538.0947 344.0469 540.3076 341.2939 539.3716 c337.124 537.9541 335.0146 533.9009 334.96 529.7324 c334.9326 527.6934 334.7539 525.7305 334.6084 523.7114 c334.2891 519.3066 333.5859 514.8345 330.8135 514.8477 C326.2656 514.4727 321.2285 519.2881 315.1768 521.1538 c308.6016 522.8877 292.7695 518.1357 298.1328 508.8135 C297.5195 509.8789 299.6084 513.4873 300.1748 514.374 c301.1465 515.8892 302.3936 517.1304 303.9795 517.9946 c307.3301 519.8169 311.6533 519.9448 315.1787 518.5786 c321.9082 515.9717 327.0645 509.0078 334.874 509.0151 c351.9512 509.0337 336.4229 525.4336 344.0947 532.6367 c346.2461 534.6563 348.0527 535.6924 350.8623 536.1064 c353.0322 536.4258 355.0967 537.0039 354.6904 539.6953 c354.2314 542.7354 350.9023 544.5229 350.6289 547.8203 c350.2354 552.5674 354.4482 554.7622 358.5361 554.9268 c363.0996 555.1108 367.8672 552.4321 372.3701 553.8169 c376.5322 555.0957 374.2051 557.6021 374.7422 560.5356 C373.6426 554.9829 368.3037 554.3643 363.8037 556.3223 c360.8496 557.6064 357.2266 557.8374 354.2402 556.5664 cBb0 0 0 0 Bh1 (Unnamed gradient 74) 153.1836 436.2783 -27.4496 287.1307 1 0 0 1 0 0 Bg254.8046 -132.3581 -132.3581 -254.8046 153.1836 436.2783 Bmf0 BBU207.062 489.9048 m212.4678 486.1563 219.4648 483.5508 223.8564 482.5601 c227.4194 481.7554 231.2466 484.5371 232.5332 486.5913 C234.1655 488.6353 235.438 490.1328 237.6997 490.0737 C246.8994 490.645 255.9004 480.4521 266.501 486.5376 C268.1338 487.8101 269.2769 489.3848 270.1616 490.9897 C270.5503 491.9097 270.832 492.769 271.0679 493.7139 C271.0161 493.5146 272.0332 492.5942 272.1895 492.4419 c274.481 489.999 277.5576 487.7788 280.375 488.1992 c285.6934 489.3271 289.7979 495.5767 292.3701 501.7065 c293.3574 504.5176 294.7168 507.4482 294.5986 509.9019 C294.6563 511.9629 293.9883 513.6616 293.8682 516.7891 c293.8398 520.439 296.6826 523.3252 298.7432 524.6846 c302.8369 527.603 307.8555 529.9653 313.3467 530.665 c317.9395 531.4165 323.3887 531.1782 327.3838 531.6851 C322.8623 531.5464 317.9951 531.7256 312.873 531.1274 c311.6045 530.98 310.3555 530.8042 309.1113 530.5161 c306.918 530.0088 304.7881 529.2402 302.7432 528.3091 c300.7441 527.3994 298.6631 526.4341 296.8955 525.1265 c294.1543 523.1035 291.6768 519.0068 292.4629 515.4985 C292.9248 512.1978 293.3789 510.7607 293.0527 508.5381 c292.3369 503.6563 290.085 497.4619 285.6621 494.8545 c282.5259 493.0088 276.7388 490.1069 275.6182 495.4688 c275.0728 498.0835 278.418 500.4038 275.2051 502.3916 c268.8447 506.3262 266.2803 492.6504 263.5854 490.3257 c259.4722 486.7769 253.7188 488.125 248.9824 489.4155 c246.9194 489.978 244.7563 490.791 242.6309 491.0679 c240.1846 491.3872 237.5342 491.9839 235.2295 490.9893 c232.9482 489.9795 231.7866 487.7344 229.8574 486.0156 c222.5688 479.8784 216.7422 488.5366 212.1514 492.1821 c208.668 494.9482 202.3335 493.2227 201.5259 499.2144 c200.1704 509.2646 213.3037 514.4028 216.2407 522.4707 c221.9556 538.1748 198.5513 538.4155 189.3506 536.7627 C196.9453 538.127 207.8076 537.0854 211.7202 529.2769 c216.6011 519.54 206.5698 513.9526 201.6631 507.457 c196.4111 500.5059 200.5986 494.3872 207.062 489.9048 cBb1 (Unnamed gradient 75) 256.1899 471.0601 88.0251 39.5112 1 0 0 1 0 0 Bg1.36162 39.4877 142.0416 -4.89788 185.1675 473.5093 Xm281.1902 8154.6885 142.0416 -4.89788 -96.0225 -7681.1787 Bc1.36162 39.4877 142.0416 -4.89788 185.1675 473.5093 Bm281.1902 8154.6885 142.0416 -4.89788 186.5293 512.9971 Bcf0 BB363.9385 421.6182 m361.3701 424.1006 358.6582 426.3042 356.1348 428.1768 C365.2764 421.3965 371.083 404.1719 362.0313 394.9502 c347.8408 380.4951 325.0566 392.7441 308.7891 386.209 c299.833 382.6133 303.2412 375.627 308.1934 370.1494 c313.6953 364.0674 320.1084 358.8926 317.5703 349.21 c314.0615 335.8262 299.0977 330.29 288.5576 331.3057 C277.9014 331.415 267.2397 333.583 260.5635 329.499 c253.3281 325.3496 253.6792 315.8916 249.5947 303.9766 C243.02 292.1152 230.8701 287.9375 219.2842 287.1338 c213.3555 286.8896 207.2295 288.1533 201.6235 291.2637 c198.7778 292.7529 195.8467 295.999 194.6069 298.8506 c193.2788 301.6602 192.5444 303.3271 191.2295 304.8496 c190.0249 306.2305 188.0762 307.7959 187.0063 308.1182 c186.1094 308.3457 186.1172 308.4629 184.4082 306.999 c181.7617 304.5547 177.7202 297.0703 169.6167 295.7881 C154.9629 291.625 158.8174 313.208 150.8491 316.5957 c145.0625 319.0576 129.4331 312.1768 131.0532 324.458 C128.9995 308.8867 142.2568 315.9883 149.0513 306.9658 c154.2925 300.0059 150.646 289.2686 162.4717 287.9404 c173.8242 286.665 180.5264 300.9521 191.8315 294.666 c200.4502 289.8711 204.749 280.4248 215.2979 278.1621 c236.6587 273.5791 251.6782 301.5938 260.2534 316.5576 c274.6519 341.6846 312.5244 313.3408 325.3486 338.6143 c328.7246 345.2656 327.3467 356.4092 322.6875 362.0635 c318.7285 366.8662 310.5479 367.3877 312.0137 374.4365 c314.2627 385.2471 339.0654 380.4238 346.5342 380.4648 c358.0986 380.5264 374.2822 384.335 375.4365 398.2734 c376.1709 407.1465 370.5137 415.2764 363.9385 421.6182 cBb0 0 0 0 Bh1 (Unnamed gradient 74) 196.2251 436.4229 -27.4496 223.5062 1 0 0 1 0 0 Bg198.3431 -103.0292 -103.0292 -198.3431 196.2251 436.4229 Bmf0 BB139.4473 326.0068 m140.3257 326.1611 141.2197 326.2568 142.0879 326.3867 c144.356 326.7305 145.9243 327.6934 147.9141 328.7793 c153.2524 331.6943 158.605 334.249 163.4995 337.209 c172.6367 343.0078 182.2983 351.8086 191.3501 359.083 c197.1362 364.043 202.3643 369.3643 207.5859 374.8945 c211.96 379.5283 217.3291 382.1768 218.6665 389.1738 c220.4038 398.252 211.189 402.3076 204.4512 405.6943 c194.9263 410.623 184.127 413.5205 174.0142 416.9111 c168.8853 418.5293 163.7295 420.1338 158.6475 422.5723 c156.0967 423.9639 153.5552 424.9077 150.9116 428.1514 c148.3931 431.1543 147.8657 435.8359 148.7793 438.7705 C148.4858 437.9097 148.3291 437.0137 148.2656 436.1084 c148.1523 434.5005 148.332 432.8735 148.7666 431.3213 c149.1743 429.8599 149.9541 428.6182 150.7188 427.3184 c151.0137 426.8179 151.4346 426.4048 151.7935 425.9512 c152.0171 425.6685 152.3379 425.4214 152.6021 425.1772 c155.1421 422.8369 158.4072 421.6309 161.502 420.2168 c163.5986 419.2588 165.8071 418.6172 167.8989 417.7051 c169.9023 416.832 171.6411 415.4854 173.7847 414.9238 c178.5151 413.6904 183.1558 412.8721 187.8623 411.3096 c190.665 410.3779 193.3877 409.2979 196.1284 408.2051 c209.3301 402.9453 222.4165 394.9717 213.4775 384.6328 C206.3203 372.9619 195.1206 363.373 183.7871 354.0127 c178.1777 349.5947 171.9023 344.0225 166.6553 340.292 c160.9502 336.3857 154.3271 333.2227 147.5615 329.5381 c145.5796 328.46 143.3374 327.7725 141.1616 327.1982 c139.584 326.7813 136.5254 326.4678 135.8003 324.6973 C136.8984 325.4375 138.1567 325.7813 139.4473 326.0068 cBb1 (Unnamed gradient 70) 77.6294 523.1489 -58.664 263.5704 1 0 0 1 0 0 Bg137.0713 -225.124 -97.8223 -59.5611 128.0298 553.8364 Xm4097.8096 -6730.1836 -97.8223 -59.5611 -3969.7798 7284.02 Bc137.0713 -225.124 -97.8223 -59.5611 128.0298 553.8364 Bm4097.8096 -6730.1836 -97.8223 -59.5611 265.1011 328.7129 Bcf0 BB331.2227 493.4712 m319.8896 487.9883 309.2852 482.8037 298.4629 476.2666 c288.2979 470.1821 279.416 462.9766 270.1709 455.6221 c263.1113 450.1587 258.3394 444.2129 251.1069 439.5244 c243.894 434.9341 236.1074 433.3857 227.5762 432.7207 c223.9136 432.4033 220.0771 432.561 216.3242 433.2813 C210.1567 433.854 204.2588 440.5186 204.3403 447.2578 c204.2031 453.7588 206.2891 459.522 208.604 465.0469 c210.6875 469.9321 214.0439 475.4019 216.4658 479.7593 C210.6499 470.2515 203.8916 460.3184 203.0464 447.3618 c203.0161 438.0098 211.7271 431.5269 220.2764 429.8374 c232.0459 427.5112 245.2295 428.0869 255.7109 434.3809 c271.1309 443.6426 279.6865 461.2891 294.4639 471.833 c303.9668 478.6016 314.9121 483.5342 325.1006 487.6655 c340.4805 493.6279 355.4902 502.5854 362.7461 517.8867 C360.7861 517.5522 359.4824 518.79 357.9063 519.3267 C357.9736 515.8604 354.6201 509.1758 348.8389 504.1543 c343.1846 499.0049 335.6318 495.5918 331.2227 493.4712 cBb1 (Unnamed gradient 70) 203.0464 473.9541 0 159.6997 1 0 0 1 0 0 Bg159.6997 0 0 -95.8154 203.0464 521.3267 Xm8114.0767 0 0 -95.8154 -7911.0303 521.3267 Bc159.6997 0 0 -95.8154 203.0464 521.3267 Bm8114.0767 0 0 -95.8154 362.7461 521.3267 Bcf0 BB111.3892 587.9326 m118.6992 585.2617 122.5591 578.2603 124.6738 569.5957 c126.4063 561.4487 127.2124 553.3516 128.5952 544.9624 c129.7095 538.6084 132.5552 533.7749 134.9282 528.3086 c137.231 522.9058 137.9712 517.5688 141.0464 512.4854 c142.2773 510.3076 143.7446 508.1719 145.3242 506.3442 c150.3037 500.6035 155.3887 494.9883 162.311 492.4419 c165.3481 491.4233 169.2046 490.6802 172.1763 491.1089 c165.4346 490.6694 158.5864 494.0908 154.0283 499.0898 c148.5674 504.8999 141.627 511.1836 139.5586 519.957 c138.856 523.2974 139.2163 526.2959 138.5718 529.6797 c137.6187 533.8657 135.2808 538.8726 133.8745 542.7852 c131.3374 549.7109 129.0981 557.7661 127.063 565.853 c125.333 573.9053 122.7764 582.5972 117.2642 587.5127 c108.895 594.9917 93.1938 593.563 87.4834 605.7891 c86.4814 604.3677 84.7422 603.9253 83.3516 603.0522 c88.3008 596.0229 106.0356 590.4771 111.3892 587.9326 CBb1 (Unnamed gradient 70) 91.1592 601.7129 -53.647 100.2255 1 0 0 1 0 0 Bg59.4095 -80.7196 -25.1512 -18.5113 104.1523 611.2759 Xm4746.73 -6449.3784 -25.1512 -18.5113 -4642.5776 7060.6543 Bc59.4095 -80.7196 -25.1512 -18.5113 104.1523 611.2759 Bm4746.73 -6449.3784 -25.1512 -18.5113 163.562 530.5562 Bcf0 BB145.8667 481.7427 m139.4912 488.9058 133.9082 495.7949 129.6885 504.5083 c125.7725 512.6851 124.1841 521.4043 123.4014 530.5991 c122.6729 537.5513 120.3413 543.1431 118.7085 549.4863 c117.1611 555.7612 117.1382 561.6084 115.0498 567.7549 c113.96 570.2598 113.1392 573.0063 111.73 575.2407 c107.9009 584.0562 103.5166 585.5967 93.5557 583.6221 c89.5288 583.0142 83.6294 583.4346 79.1958 585.0576 c89.0713 580.5635 100.3306 585.2617 104.3955 582.4551 c106.6772 581.6006 108.8706 577.377 111.2539 573.1538 c113.3032 568.8735 114.9771 564.2852 115.3203 559.4092 c115.4707 555.6396 114.6987 552.4688 114.9097 548.6235 c115.2886 543.8452 117.1367 537.9653 118.2646 533.4722 c121.4204 517.0352 129.8008 498.3506 139.8789 484.8115 c147.2437 474.1597 157.395 465.8208 168.6196 459.439 c168.5479 461.2769 169.7109 462.6133 170.3218 464.1504 c163.9497 463.1626 150.1958 475.71 145.8667 481.7427 CBb1 (Unnamed gradient 47) 131.7969 524.6172 -42.6584 129.6053 1 0 0 1 0 0 Bg95.3126 -87.8239 -39.4102 -42.7707 151.8003 546.3262 Xm5973.2939 -5503.9727 -39.4102 -42.7707 -5821.4937 6050.2988 Bc95.3126 -87.8239 -39.4102 -42.7707 151.8003 546.3262 Bm5973.2939 -5503.9727 -39.4102 -42.7707 247.1128 458.5024 Bcf0 BB*u1 D0 g401.6406 485.5073 m396.1758 483.8667 390.7041 482.1812 385.1709 480.7837 c379.1641 479.2646 373.1309 477.8315 367.1631 476.1494 c364.2012 475.3149 361.2207 474.0181 358.2188 473.3926 c355.4658 472.8188 352.8721 472.332 350.2285 471.21 c348.0654 470.2925 345.5781 469.9839 343.583 468.7012 c342.4688 467.9834 341.8311 467.1899 342.583 465.9512 c343.2432 464.8618 344.8926 463.8145 346.1826 463.8311 c347.709 463.8521 348.5615 465.147 349.7793 465.8994 c353.2402 468.0356 356.8828 469.4888 360.7695 470.5742 c370.7471 473.3618 380.5723 476.6162 390.4912 479.5977 c409.4932 485.46 426.1191 491.5967 443.8711 499.1836 c460.665 505.8398 475.1025 517.2349 484.7969 533.1255 C485.1191 533.9883 485.3994 534.998 485.0391 536.1855 C484.5195 536.6353 485.0273 537.4258 483.1348 537.3984 c481.9932 536.9287 l477.5039 535.1182 l474.5371 533.9829 471.5225 533.0024 468.7676 531.5508 c463.248 528.6475 458.6602 524.6934 454.4814 519.937 C446.876 510.0015 436.209 502.2769 423.165 500.792 C417.7715 499.6289 412.1162 498.8164 406.8467 497.9644 c390.1182 495.3281 373.2637 493.6968 356.998 488.0977 c356.7266 488.0093 356.4414 487.9043 356.168 487.8115 C356.1953 487.6445 356.2246 487.4775 356.2432 487.3105 C364.5977 490.0249 373.2813 491.9097 381.7539 492.9888 c400.8916 496.4097 420.3115 496.7754 439.8066 504.6543 C446.9473 508.4326 452.0186 512.9585 457.3271 517.9355 c463.2549 524.1323 471.3174 528.5098 479.9863 531.6943 C479.7012 531.1855 479.3965 530.6738 479.0918 530.187 c476.9482 526.8594 474.2793 523.5747 471.4238 520.4136 c465.6396 514.0742 459.2813 507.9907 451.1768 504.1313 c435.2314 496.041 417.8623 490.3774 401.6406 485.5073 cf0 D481.2871 534.8555 m481.2744 534.876 481.2686 534.8955 481.2627 534.9194 C481.3154 535.293 481.2744 535.0078 481.2871 534.8555 CBb1 (Unnamed gradient 70) 342.2568 500.6152 0 142.9512 1 0 0 1 0 0 Bg142.9512 0 0 -77.6113 342.2568 539.4258 Xm8253.6826 0 0 -77.6113 -7911.4258 539.4258 Bc142.9512 0 0 -77.6113 342.2568 539.4258 Bm8253.6826 0 0 -77.6113 485.208 539.4258 Bcf0 BB*U327.6484 629.186 m324.7744 630.375 321.9414 631.769 319.2607 633.3071 c317.6621 634.2246 314.3145 635.4199 312.5703 634.1553 c312.0811 633.7993 311.4209 633.3394 310.8115 632.9453 c309.5645 632.1367 308.2881 631.3584 306.9902 630.6606 c300.7549 627.2676 294.3945 624.0752 287.6846 623.2188 c287.0586 623.1328 l286.9004 623.1113 l286.8213 623.1011 l280.3101 616.7925 285.0156 621.3472 283.5615 619.9043 c283.5615 619.8638 l283.5503 619.5303 l283.5073 618.1968 l283.4121 615.5176 l283.415 613.7251 283.1313 611.936 282.7729 610.1538 c282.2495 606.564 281.0352 603.0801 279.6689 599.6929 c277.3452 594.5576 274.2593 590.9106 271.5537 585.8965 c268.0239 579.6528 264.4551 571.3999 260.8066 565.6377 c252.125 551.103 239.1665 536.333 226.7412 521.8359 C227.1792 521.5806 226.6294 520.0889 227.0288 519.7803 C228.8911 521.9956 231.7632 525.4185 233.7456 527.6509 c242.8423 538.1465 252.6255 547.501 261.3418 558.6626 c268.3188 566.853 271.3975 575.5405 275.2236 584.5913 c278.8882 593.6069 283.0059 601.4912 284.4072 611.2329 C284.8389 613.2681 284.7637 615.3882 284.9121 617.4604 c284.9824 619.0122 l285.0127 619.7827 l285.0156 619.8794 285.0156 619.8877 V288.6406 623.4004 286.0234 620.8623 286.8672 621.6509 c286.915 621.6572 l287.1006 621.6792 l287.4717 621.7256 l288.4609 621.853 289.4326 621.9414 290.377 622.1982 c296.4043 623.5474 302.1455 626.1748 307.5352 629.4727 c308.8877 630.2896 310.2002 631.1787 311.4805 632.0938 c312.4219 632.7905 l312.876 633.1396 l313.0918 633.3105 l313.1807 633.3838 l309.9209 633.1831 317.625 633.6626 316.8828 633.584 c316.9395 633.5513 l319.0293 632.4238 l321.8877 630.9404 324.8721 629.6147 327.9238 628.5156 c333.207 626.5415 340.2041 624.8062 344.5645 625.96 C339.5908 625.2031 333.3301 626.8467 327.6484 629.186 cBb1 (Unnamed gradient 70) 243.2764 635.0034 -55.6195 178.3952 1 0 0 1 0 0 Bg100.7373 -147.2306 -132.9705 -90.9804 309.7021 680.4531 Xm4585.1753 -6701.3706 -132.9705 -90.9804 -4275.4731 7381.8237 Bc100.7373 -147.2306 -132.9705 -90.9804 309.7021 680.4531 Bm4585.1753 -6701.3706 -132.9705 -90.9804 410.4395 533.2227 Bcf0 BB326.0557 625.7769 m323.1445 620.6753 303.4541 623.4272 295.085 617.0933 C284.1279 607.6675 289.7627 596.7383 287.7334 588.2568 C286.4199 579.4937 283.5869 571.2695 280.0405 563.0225 c277.3237 556.8057 276.4419 550.9697 273.9448 544.9531 c271.4165 539.0259 267.5068 534.7095 264.2363 529.1738 c262.8711 526.7969 261.3525 524.3838 259.9736 522.0679 c257.9912 518.6436 255.6611 515.4678 253.1299 512.4058 C253.5957 512.2549 254.0449 512.0615 254.4814 511.8462 C260.8735 518.9609 264.2402 528 270.1646 535.1533 c272.5781 538.0654 275.3535 540.0557 277.4946 543.3647 c280.1636 547.543 281.8403 553.5947 283.0825 558.0273 c285.4014 565.937 287.2686 574.7524 288.5781 583.6343 C290.6494 592.418 288.2412 601.6553 292.3066 609.938 C300.9854 622.1646 316.6572 617.7217 328.1191 621.2026 C326.7988 622.4873 326.6924 624.2456 326.0557 625.7769 CBb1 (Unnamed gradient 70) 244.1064 635.5713 -55.6195 178.3933 1 0 0 1 0 0 Bg100.7363 -147.229 -105.8084 -72.3956 297.0107 671.769 Xm4580.6909 -6694.8159 -105.8084 -72.3956 -4283.6802 7366.585 Bc100.7363 -147.229 -105.8084 -72.3956 297.0107 671.769 Bm4580.6909 -6694.8159 -105.8084 -72.3956 397.7471 524.54 Bcf0 BB88.7065 602.7593 m87.9951 603.4736 87.3525 604.252 86.9072 605.1475 c82.8623 602.0332 78.4336 599.5112 73.4038 597.5259 c68.7769 595.7158 63.8745 594.9551 59.083 594.1133 c61.7295 594.6191 64.8018 594.3774 67.5229 594.7744 c71.1558 595.3169 74.5747 596.1719 78.0005 597.6138 c81.2764 598.9785 86.0557 600.4976 88.7065 602.7593 CBb1 (Unnamed gradient 70) 78.3965 592.3198 -53.647 100.2026 1 0 0 1 0 0 Bg59.3959 -80.7012 -26.5638 -19.5509 91.6787 602.0952 Xm4743.4238 -6444.8862 -26.5638 -19.5509 -4651.7451 7046.9814 Bc59.3959 -80.7012 -26.5638 -19.5509 91.6787 602.0952 Bm4743.4238 -6444.8862 -26.5638 -19.5509 151.0747 521.394 Bcf0 BB*u1 D339.0049 561.1392 m335.8613 562.4131 332.7012 563.3389 329.6055 561.7725 c323.5508 558.7026 327.0029 549.4561 323.8271 543.9746 c320.2344 537.7754 313.0801 535.1147 306.042 537.1294 c301.7715 538.3516 298.5234 542.0317 294.2666 543.2036 c279.4707 547.2778 275.8022 529.2144 271.4653 520.0195 C269.9844 516.0659 268.3311 512.5894 266.439 509.5649 c265.9722 508.8193 260.9355 501.6763 259.9492 505.0508 c259.6147 506.1973 261.0762 507.48 260.875 508.8628 c260.7212 509.9229 260.3569 511.5952 259.3379 512.1831 C257.8774 513.4858 257.4502 513.4038 256.9336 513.6514 C253.6304 514.4087 253.3535 514.3721 250.5068 514.2539 C241.8159 512.9692 237.5981 508.7773 233.0225 506.9087 C227.5415 503.6943 210.2485 501.7075 217.6147 507.6055 C220.4585 510.938 226.6992 513.1802 227.5923 519.6602 c228.7021 525.3032 225.3721 530.9927 220.8086 533.5889 c211.4595 538.5645 200.5386 538.4116 190.6484 538.1328 C185.6992 537.6475 180.8013 535.731 177.5103 532.5903 C176.6636 531.5957 177.0635 527.4805 174.5034 525.8066 C172.2891 523.957 170.0181 523.3955 168.3457 521.7686 C165.6489 519.5161 163.6792 516.4941 162.083 513.2563 C161.6572 512.0054 161.0112 510.835 160.4868 509.6235 c160.0049 508.5034 159.3589 507.1973 160.2661 506.1074 c161.2451 504.9302 162.7607 504.3853 164.1309 503.7769 c165.6855 503.0854 167.2725 502.4673 168.7983 501.7134 c169.7197 501.2583 170.6187 500.7554 171.4736 500.1836 c174.8955 498.0708 176.314 493.2471 175.1011 489.5928 C171.2612 482.3408 170.9585 474.8926 172.5259 467.6162 C172.6963 467.6733 170.6045 480.5962 178.1655 491.9629 c181.0503 496.3032 174.856 501.9902 171.106 503.7334 c167.7803 505.332 165.1172 506.4087 162.8896 507.6123 C163.0693 508.2158 163.3159 508.8345 163.4814 509.3921 C165.4893 514.2871 167.896 518.7012 171.5347 521.0693 c173.1597 522.188 177.2686 523.9414 178.6519 528.2461 C179.2065 529.4063 178.3979 530.9395 179.2949 532.1416 c179.9805 533.0601 181.2607 533.3403 182.2646 533.7578 c185.1777 534.9673 187.8193 536.2227 190.9985 536.5566 c197.6377 537.2573 204.5059 536.7158 211.0723 535.5591 c216.9487 534.5239 224.9033 531.3716 223.707 524.0171 c222.7744 518.2788 215.8882 515.5801 212.1719 511.9551 c203.7471 503.7397 214.1304 493.0244 224.0938 496.3618 c230.5762 498.5347 244.2134 510.8623 250.4243 500.9937 c251.9204 498.6177 249.9995 495.3525 251.6011 492.834 c253.9902 489.0781 259.4233 488.9517 263.2231 490.2666 c276.8872 494.9956 274.5684 522.0239 282.1792 532.269 c293.0342 546.8853 325.0928 520.708 327.4238 543.2705 c328.4277 552.981 332.1934 560.1343 343.3203 557.0244 c352.6934 554.4058 353.6006 553.2417 355.7275 562.9688 c357.916 572.9844 363.54 572.5518 372.0986 573.3716 C367.8799 574.5269 362.6299 574.626 359.001 571.7324 c354.6738 568.2808 355.1377 560.5234 350.207 558.7939 c346.6104 557.5327 342.8213 559.5933 339.0049 561.1392 cBb1 (Unnamed gradient 47) 194.2622 592.4116 -42.6584 129.6079 1 0 0 1 0 0 Bg95.3145 -87.8257 -147.0508 -159.5897 267.7876 672.2065 Xm5939.9136 -5473.2153 -147.0508 -159.5897 -5672.126 6145.4219 Bc95.3145 -87.8257 -147.0508 -159.5897 267.7876 672.2065 Bm5939.9136 -5473.2153 -147.0508 -159.5897 363.1025 584.3809 Bcf0 BB*U0 D164.8467 425.9136 m175.022 422.1826 185.4805 419.2021 195.5376 415.1621 c202.0327 412.5967 208.5674 409.585 214.0278 405.1992 c219.646 401.1855 223.3877 393.9238 220.9043 387.7129 C215.3223 376.1025 206.458 368.1523 200.2646 362.3604 c193.1016 355.6582 185.7354 349.1445 177.9072 343.2246 c169.8003 337.0947 161.4478 333.0293 152.3105 328.6816 C155.6851 331.3271 159.1582 330.4834 163.0313 331.4717 c170.3145 333.3301 177.7627 338.8291 183.8887 343.0645 c189.1392 346.6914 192.646 352.4531 197.8994 355.9551 c202.3833 358.9453 205.769 360.9854 209.5732 365.1631 c216.8613 373.1689 225.5073 380.875 228.0376 391.8896 c229.1372 396.668 226.5928 399.9404 222.8862 402.5713 c219.3574 405.0752 216.0884 408.1162 212.5063 410.3682 c199.4829 418.5527 185.5498 421.9561 172.2769 426.895 c168.125 428.2212 163.478 429.9829 159.8423 432.437 c155.3643 435.4629 156.8403 440.0298 160.1157 443.2788 c163.6792 446.8115 166.0044 449.7109 167.9731 454.4106 c169.9385 459.1104 170.4419 464.1304 170.8477 469.1372 C168.6162 463.4004 165.6245 457.4146 161.3442 452.9092 c157.3354 448.6909 153.4536 446.189 151.3818 440.5776 c148.0845 431.6509 158.5913 428.2061 164.8467 425.9136 cBb1 (Unnamed gradient 66) 202.7505 344.3691 124.2673 74.9667 1 0 0 1 0 0 Bg-42.2103 61.954 87.4112 59.5548 159.3491 314.7988 Xm-4563.3369 6697.8101 87.4112 59.5548 4722.6855 -6383.0107 Bc-42.2103 61.954 87.4112 59.5548 159.3491 314.7988 Bm-4563.3369 6697.8101 87.4112 59.5548 117.1387 376.7529 Bcf0 BB382.0186 458.7734 m374.3115 464.6235 364.0059 466.6724 358.4023 474.3101 c352.6416 482.2056 356.3232 493.0596 363.8711 498.8984 c376.8027 510.1377 397.5938 516.1196 412.5615 522.0957 C395.5703 515.7769 376.7822 510.7651 362.3848 498.4438 c355.0781 492.644 351.793 481.3174 357.7959 473.3066 c363.6748 465.5532 373.6211 463.2593 380.5146 457.8945 c384.4912 454.8174 388.3096 449.9521 387.9863 445.3403 C387.2666 440.6968 381.6113 438.1387 376.8105 436.3984 c371.752 434.6367 366.4287 433.4746 361.1055 432.3262 c358.749 431.8198 356.2168 431.5015 353.9355 430.7251 c352.0488 430.0825 350.6348 429.4541 348.5313 429.9258 C349.374 429.1763 350.2813 428.5039 351.209 427.8511 c352.6875 426.8115 354.0127 425.9492 355.3301 424.6963 c362.7344 417.9902 370.2959 406.25 363.8164 396.9482 c356.9951 388.2871 344.5225 389.0566 334.3242 389.4766 c326.2158 389.8945 318.5693 391.2363 310.5332 389.7988 c306.6836 389.1748 302.8633 388.6006 298.5479 386.7822 C288.0459 381.1572 292.6221 369.2764 299.7451 362.7891 c308.7832 354.5596 306.0625 345.6094 293.498 344.001 c284.8779 342.8975 276.8296 348.0215 268.1548 347.6523 c257.7085 347.2061 249.752 340.7168 245.8486 331.2275 c242.5962 323.3252 245.1816 311.085 239.6284 304.4727 c237.3682 301.7822 234.019 299.4023 230.9302 297.7832 c224.8262 294.5889 217.4492 293.8145 210.6958 294.873 c207.3467 295.3975 204.0801 296.5254 201.5537 298.8633 c199.2153 301.0293 196.1172 305.4756 195.6831 308.7041 c195.4614 310.3438 195.3696 312.5967 194.3833 314.0039 c192.1743 317.1484 188.0977 316.4355 184.9663 315.4512 c181.2012 314.2656 179.5078 310.9697 177.2051 308.0479 c175.3262 305.6592 172.8301 304.3721 170.144 303.0898 c164.8618 300.5635 161.7578 304.1748 160.2241 309.0332 c159.2056 312.2617 158.4893 317.75 156.1602 320.2764 c154.2163 322.3857 149.9771 322.1943 147.9033 324.1123 C147.8926 323.9971 145.7515 324.0908 145.7529 323.9756 C144.3813 323.3154 143.7354 323.3027 141.7197 322.9912 C142.6802 322.918 145.5459 321.6348 146.3076 321.0996 c147.9033 319.9814 149.0435 319.5684 150.9707 319.418 c155.5996 319.0508 156.8447 314.96 158.2188 311.2178 c159.1201 308.7627 159.5063 306.3115 160.1265 303.7939 c162.4688 294.3037 173.7847 302.623 177.0684 307.1357 C179.564 311.0791 185.0791 315.4326 189.6387 311.4688 C194.0962 308.8174 196.1782 303.9258 198.3174 299.585 C204.335 291.4639 216.1616 290.5664 225.4434 292.6221 c234.7891 294.6807 245.0786 300.8193 246.8169 311.4531 c248.5122 320.9287 251.8535 331.8496 261.7588 334.21 c275.728 337.625 291.374 330.5605 304.3877 339.0205 c310.0947 343.083 314.6846 350.5439 311.9912 357.5879 c309.3418 364.3682 303.0859 368.3262 298.3389 373.7129 C295.3242 376.1094 295.5498 381.2412 299.375 382.626 C302.4326 384.3721 305.7891 385.3096 309.0908 386.1289 c315.7002 388.0439 322.4766 387.9355 329.1689 387.6406 c335.875 387.3779 342.6348 386.9717 349.5713 387.8682 c356.2344 388.7412 364.2822 391.8203 367.1201 399.4814 c369.4414 405.915 366.8906 412.7764 363.4551 417.9336 c361.707 420.5908 359.665 423.0146 357.4268 425.1904 c356.293 426.2676 355.1211 427.2876 353.8945 428.2324 c353.123 428.7837 l353.1641 428.7764 353.1973 428.7622 353.2217 428.7256 C362.3311 431.0732 371.9131 432.2651 380.792 436.0435 c384.916 437.8325 390.1719 441.1069 389.8018 446.6675 c389.1689 451.7617 385.7578 455.7217 382.0186 458.7734 cBb1 (Unnamed gradient 66) 209.7344 410.8232 -2.15181 157.1509 1 0 0 1 0 0 Bg157.0401 -5.9006 -9.11425 -242.5691 214.2705 531.5479 Xm8179.6313 -307.3401 -9.11425 -242.5691 -7965.3608 838.8882 Bc157.0401 -5.9006 -9.11425 -242.5691 214.2705 531.5479 Bm8179.6313 -307.3401 -9.11425 -242.5691 371.3105 525.6475 Bcf0 BB393.8232 449.4004 m393.9854 448.8311 394.127 448.2451 394.2529 447.6401 C395.0791 441.3638 390.4961 436.9658 385.6445 433.9746 c380.208 430.6206 372.9834 431.8257 367.9258 427.9956 c360.917 422.6904 375.4766 420.8105 373.4453 415.043 C374.6309 417.8672 372.0313 419.5723 372.0098 421.9746 c371.9727 425.7822 375.9082 426.6021 378.876 427.1909 c383.4102 428.0898 387.4619 429.167 391.2725 432.0518 c394.2471 434.3032 396.8428 437.502 397.4863 441.269 c398.0615 444.6406 395.5137 447.9761 394.3262 451.0068 c393.168 453.9517 391.8594 456.061 390.0078 458.5586 c386.7529 462.9551 381.3809 465.1406 377.167 468.3057 c373.541 471.0308 369.8945 473.6675 366.4805 476.6709 c363.3779 479.4023 360.1992 483.104 361.1211 487.5552 C360.4697 486.3052 359.7139 485.0034 359.7676 483.5322 c360.0625 475.1689 367.9229 471.5205 374.4814 468.29 c381.2705 464.9448 390.7549 460.3169 393.8232 449.4004 cBb1 (Unnamed gradient 70) 241.731 665.5898 -58.664 314.2288 1 0 0 1 0 0 Bg163.4165 -268.393 -41.8979 -25.5104 260.9771 677.3081 Xm4128.5024 -6780.5938 -41.8979 -25.5104 -3867.5254 7457.9019 Bc163.4165 -268.393 -41.8979 -25.5104 260.9771 677.3081 Bm4128.5024 -6780.5938 -41.8979 -25.5104 424.3936 408.915 Bcf0 BB284.7021 367.1406 m283.252 372.7363 275.5664 372.9443 276.4663 380.873 c277.2393 387.6787 285.4961 393.8076 291.3477 396.0889 c291.3633 396.0967 291.3809 396.1016 291.3955 396.1064 c298.7939 399.0215 306.7432 399.6279 314.4355 400.2139 c317.7266 400.4658 321.1299 400.7236 324.3965 401.165 c325.2344 401.2744 326.3086 401.3643 327.5254 401.4609 c332.4277 401.8613 340.627 402.5254 341.9541 406.1445 c342.2256 406.8955 342.209 407.5195 341.8906 408.1162 c340.335 411.0713 332.5 413.0664 325.583 414.8232 c316.5459 417.124 308.0088 419.2969 306.9902 424.377 c306.4307 427.1719 306.9424 429.5596 308.5127 431.4761 c311.4229 435.0254 317.6709 436.6753 328.1768 436.6753 c331.0254 436.6753 333.7832 436.5601 336.3398 436.4341 c337.5469 436.3701 l339.4473 436.2744 341.0918 436.1929 342.2588 436.1929 c342.5332 436.1929 342.7842 436.1953 343.0068 436.207 c350.2373 436.5601 355.4102 439.022 356.8369 442.7886 c358.1143 446.1626 356.2715 450.5024 351.6543 455.0176 C350.3096 456.522 348.7314 457.8774 347.0596 459.3145 c342.0107 463.6499 336.29 468.562 335.9033 477.9614 c335.8994 478.0728 l335.9121 478.1821 l337.0908 489.5684 345.2539 495.9927 351.8115 501.1514 c352.1641 501.4287 l353.8213 502.6675 353.8252 502.6704 v366.0596 511.7695 373.4463 524.002 363.7207 538.7153 C363.5527 538.8638 363.54 538.8677 363.6865 538.7246 c371.8096 530.7969 375.5596 515.7173 367.2549 506.5635 c358.8408 497.29 345.4854 494.4639 340.9043 480.9316 c339.3643 476.3853 341.5361 471.0151 344.4785 468.0752 c347.1553 465.147 350.0557 462.6616 352.8604 460.2554 c358.0898 455.7725 363.0293 451.5366 365.6758 445.3472 c365.7031 445.2827 l365.7256 445.2104 l367.3887 439.9873 366.1533 432.9688 360.583 430.2534 c355.5576 427.5767 349.5547 427.2285 344.8936 427.2285 c344.4844 427.2285 344.0713 427.2339 343.6611 427.2378 c343.1934 427.2144 342.6162 427.2031 342.0264 427.2031 c340.7627 427.2031 339.4346 427.2539 338.0908 427.3037 c336.793 427.3525 335.4795 427.3994 334.1904 427.3994 c328.998 427.3994 326.1816 426.4966 324.8438 424.3867 C324.5029 422.9688 326.0859 421.8955 329.4492 420.2188 c329.8174 420.0381 330.1777 419.8584 330.5195 419.6797 c333.0029 418.5439 335.6318 417.5625 338.4141 416.5254 c339.2295 416.2217 340.0488 415.916 340.8701 415.6035 c342.7969 414.8691 344.7813 414.1113 346.7559 413.1191 c346.9229 413.0342 l347.0703 412.9102 l347.1719 412.8232 347.543 412.6328 347.8135 412.4941 c349.4209 411.6689 353.1885 409.7295 351.4053 404.3613 c351.29 404.0156 l351.0342 403.7598 l347.5459 400.2559 344.3672 399.375 341.2939 398.5254 c340.3301 398.2588 339.4189 398.0049 338.4971 397.6729 c330.7959 395.3535 322.3438 394.626 313.6328 394.0244 c312.8271 393.957 311.917 393.8936 310.9395 393.8301 c304.7168 393.416 295.3125 392.7871 289.1475 388.4121 c276.7339 379.6074 298.5723 368.5254 290.875 357.9092 c282.1367 345.8535 260.165 359.6182 248.543 347.6084 c239.8022 338.5771 237.8208 322.9512 226.3984 316.2891 C237.3438 322.6748 234.9995 335.7295 239.7412 345.6455 c246.1255 359.0078 261.5664 358.3662 274.542 359.126 c278.8623 359.375 285.3594 358.8096 284.9199 365.7568 c284.8877 366.252 284.8135 366.7109 284.7021 367.1406 cBb1 (Unnamed gradient 70) 174.1455 626.834 -58.664 316.9481 1 0 0 1 0 0 Bg164.8307 -270.7156 -204.7832 -124.6864 277.3984 689.7017 Xm4114.4297 -6757.48 -204.7832 -124.6864 -3837.0313 7447.1816 Bc164.8307 -270.7156 -204.7832 -124.6864 277.3984 689.7017 Bm4114.4297 -6757.48 -204.7832 -124.6864 442.2295 418.9863 Bcf0 BBUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF